{"version":3,"file":"static/js/688.8e8b9946.chunk.js","mappings":"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","sources":["hooks/useEffectUpdate.js","cmps/InputSwitch.jsx","services/cloudinary-service.js","cmps/RecipeImg.jsx","cmps/ShareButton.jsx","cmps/ingPreview.jsx","cmps/IngList.jsx","pages/RecipeEditor.jsx","services/storageService.js","services/recipeService.js","store/actions/dialogMsgActions.js"],"sourcesContent":["import { useEffect, useRef } from \"react\"\n\nexport const useEffectUpdate = (cb, dependencies) => {\n    const isFirstTime = useRef(true)\n\n    useEffect(() => {\n        if (isFirstTime.current) {\n            isFirstTime.current = false\n            return\n        }\n        cb()\n    }, dependencies)\n}","\nexport function InputSwitch({ value, onChange, txt, id }) {\n    return (\n        <div className='input-switch'>\n            <input checked={value} onChange={onChange} type=\"checkbox\" name=\"switch\" id={id} className=\"tgl tgl-light\" />\n            <label htmlFor={id} className=\"tgl-btn\"></label>\n            <h4>{txt}</h4>\n        </div>\n    )\n}\n\n\n\n// h4 iOS\n// input#cb2.tgl.tgl-ios(type = \"checkbox\")\n// label.tgl-btn(for = \"cb2\")\n\n","export async function uploadImg(ev) {\n    const CLOUD_NAME = 'recipe-gen'\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\n    const formData = new FormData();\n    formData.append('file', ev.target.files[0])\n    formData.append('upload_preset', 'recipe-gen');\n\n    return fetch(UPLOAD_URL, {\n        method: 'POST',\n        body: formData\n    })\n        .then(res => res.json())\n        .then(res => {\n            return res\n        })\n        .catch(err => console.error(err))\n}\n","import { useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { uploadImg } from '../services/cloudinary-service'\nimport { setDialogOpen } from '../store/actions/dialogMsgActions'\nimport { setLoading } from '../store/actions/loaderActions'\nimport { faCloudUploadAlt, faImage, faTrash } from '@fortawesome/free-solid-svg-icons'\nexport function RecipeImg({ imgUrl, onChangeImg, isEdited }) {\n    const dispatch = useDispatch()\n    const [isExpand, setIsExpand] = useState();\n    const inputRef = useRef()\n\n    const onUploadImg = async (ev) => {\n\n        const _uploadImg = async () => {\n            if (!ev.target.files[0]) return\n            try {\n                dispatch(setLoading(true))\n                const res = await uploadImg(ev)\n\n                onChangeImg(res.url)\n            } catch (err) {\n                console.log(err);\n            } finally {\n\n            }\n        }\n\n        _uploadImg(ev)\n        // if (isEdited) {\n        //     dispatch(setDialogOpen({ txt: 'Are you sure you want to proceed?', title: 'This will save any unsaved changes', successCb: () => _uploadImg(ev) }))\n\n        // } else {\n        //     _uploadImg(ev)\n        // }\n\n\n    }\n\n\n\n    const onTriggerImgUpload = (ev) => {\n        ev.stopPropagation()\n        inputRef.current.click()\n    }\n\n\n    const onRemoveImg = (ev) => {\n        ev.stopPropagation()\n        onChangeImg(null, true)\n        setIsExpand(false)\n    }\n\n\n    const expandClass = isExpand ? 'expand' : ''\n    const imgClass = imgUrl ? 'img-class' : ''\n    // const imgSrc = require('../assets/imgs/cloud-upload.jpeg')\n    return (\n        <section className='recipe-img-container'>\n\n            <section className={`recipe-img ${expandClass} ${imgClass}`}>\n                {imgUrl ?\n                    <section onClick={() => setIsExpand(prevExpand => !prevExpand)} className=\"img-container\" style={{ backgroundImage: `url(${imgUrl})` }} >\n                        <section className={`img-actions ${expandClass}`}>\n                            <button onClick={onTriggerImgUpload}><FontAwesomeIcon icon={faImage} /> <span>Change</span></button>\n                            <button onClick={onRemoveImg}><FontAwesomeIcon icon={faTrash} /> <span>Remove</span></button>\n                        </section>\n                    </section> :\n\n                    <section className=\"img-upload\">\n                        <label htmlFor=\"imgUploader\">\n                            {/* <img className='img-placeholder' src={imgSrc} alt=\"\" /> */}\n                            <FontAwesomeIcon className='upload-icon' icon={faCloudUploadAlt} />\n                        </label>\n                    </section>}\n                <input ref={inputRef} type=\"file\" id=\"imgUploader\" onChange={onUploadImg} hidden />\n            </section>\n        </section>\n    )\n}\n","import {\n    EmailShareButton,\n    FacebookShareButton,\n    RedditShareButton,\n    TelegramShareButton,\n    TwitterShareButton,\n    WhatsappShareButton,\n    WhatsappIcon,\n    FacebookIcon,\n    TelegramIcon,\n    EmailIcon,\n} from \"react-share\";\n\n\nconst DynamicShareBtn = (props) => {\n    switch (props.type) {\n        case 'whatsapp':\n            return <WhatsappShareButton {...props}><WhatsappIcon /></WhatsappShareButton>;\n        case 'facebook':\n            return <FacebookShareButton {...props}><FacebookIcon /></FacebookShareButton>;\n        case 'telegram':\n            return <TelegramShareButton {...props}><TelegramIcon/></TelegramShareButton>;\n        case 'email':\n            return <EmailShareButton {...props}><EmailIcon/></EmailShareButton>;\n        default:\n            return <></>;\n    }\n}\n\nexport function ShareButton(props) {\n    return (\n        <section className='share-btn'>\n            {/* <WhatsappShareButton url=\" \" title=\"My Recipe\"  ><WhatsappIcon /></WhatsappShareButton> */}\n            <DynamicShareBtn {...props} />\n        </section>\n    );\n}\n","import { forwardRef, useEffect, useMemo, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nimport { getAmountToScale, selectText, sleep } from \"../services/utilService\";\nimport { showErrorMsg } from \"../services/eventBusService\";\n\n\nexport function IngPreview({\n    ingredient,\n    ingToScale,\n    isFixedRatio,\n    isWeightRatio,\n    onChangeRecipeData,\n    ingredientsLength,\n    handleIngChange,\n    removeIngredient,\n    providedRef,\n    dragHandleProp,\n    dragProp,\n    numOfDishes,\n    handleRecipeAmounts,\n    amountToScaleFixed\n}) {\n\n    const [className, setClassName] = useState('');\n\n    const moreRef = (el) => {\n        console.log('moreREf el:', el);\n\n    }\n\n\n    const onRemoveIngredient = async () => {\n        if (isFixedRatio) return\n        if (ingredientsLength === 1) {\n            showErrorMsg({ txt: 'Sorry, for now you need to have at least 1 ingredient' })\n            return\n        }\n\n        setClassName('equal')\n        await sleep(350)\n        removeIngredient(ingredient.id)\n    }\n\n    // const mergeRefs = (...refs) => {\n    //     const filteredRefs = refs.filter(Boolean);\n    //     if (!filteredRefs.length) return null;\n    //     if (filteredRefs.length === 0) return filteredRefs[0];\n    //     return inst => {\n    //         for (const ref of filteredRefs) {\n    //             if (typeof ref === 'function') {\n    //                 ref(inst);\n    //             } else if (ref) {\n    //                 ref.current = inst;\n    //             }\n    //         }\n    //     };\n    // };\n\n\n    const onHandleIngChange = (type) => {\n\n        if (!isFixedRatio) return (ev) => handleIngChange(ev, ingredient)\n        if (type === 'amount') {\n            return (ev) => handleRecipeAmounts(ev, ingredient)\n        }\n\n        return () => { }\n    }\n\n    const onChangeRecipeDataWrap = () => {\n        if (ingredient.units === 'units') {\n            showErrorMsg({ txt: \"Can't set 'Units' as a main relative quantity\" })\n            return\n        }\n        onChangeRecipeData('ingToScaleId', ingredient.id)\n    }\n\n\n    const handleKeyPress = (ev) => {\n\n        // if (ev.which === 13 || ev.charCode === 13 || ev.code==='Enter' || ev.nativeEvent.keyCode===13) {\n        if (ev.nativeEvent?.keyCode === 13 || ev.keyCode === 13 || ev.which === 13 || ev.charCode === 13 || ev.code === 'Enter') {\n            // if (ev.keyCode === 13) {\n            ev.target.blur()\n            window.getSelection().empty()\n            ev.stopPropagation()\n        }\n\n    }\n\n    function getUnitsValue() {\n        let unitsValue = isWeightRatio ? 'g' : ingredient.units\n        if (ingredient.units === 'units') unitsValue = 'units'\n        return unitsValue\n    }\n\n\n    let amountToScale = (ingToScale) ? getAmountToScale(ingredient, ingToScale) : ''\n\n    /*TEST START*/\n\n    const dishesAmount = useMemo(() => {\n        numOfDishes ||= 1\n        if (!isFixedRatio) return (ingredient.amount * numOfDishes) % 1 === 0 ? (ingredient.amount * numOfDishes) : (ingredient.amount * numOfDishes).toFixed(2)\n        console.log('ingredient', ingredient);\n        if (ingredient.units === 'units') return ingredient.amount\n\n        // linear ratio\n        // const res = amountToScaleFixed / ingToScale.amount * ingredient.amount\n\n        // weight ratio\n        const res = (isWeightRatio ? amountToScaleFixed * amountToScale : amountToScaleFixed / ingToScale.amount * ingredient.amount) * numOfDishes\n\n        // amount To Scale Ratio\n        // const res = ingToScale.amount * amountToScale\n        return res % 1 === 0 ? res : res.toFixed(2)\n    }, [numOfDishes, amountToScaleFixed, amountToScale, isFixedRatio, isWeightRatio])\n\n    /*TEST END*/\n\n\n\n    /*ORIGINAL START*/\n\n    /*\n    const dishesAmount = useMemo(() => {\n        numOfDishes ||= 1\n        if (!isFixedRatio) return (ingredient.amount * numOfDishes) % 1 === 0 ? (ingredient.amount * numOfDishes) : (ingredient.amount * numOfDishes).toFixed(2)\n        // linear ratio\n        const res = amountToScaleFixed / ingToScale.amount * ingredient.amount\n\n        // amount To Scale Ratio\n        // const res = ingToScale.amount * amountToScale\n        return res % 1 === 0 ? res : res.toFixed(2)\n    }, [numOfDishes, amountToScaleFixed])\n    */\n\n    /*ORIGINAL END*/\n\n\n    const ingToScaleClass = ingredient.id === ingToScale?.id ? 'chosen' : ''\n\n\n    /*ORIGINAL START*/\n    // const amountToScale = (ingToScale && ingredient.units !== 'units') ? getAmountToScale(ingredient, ingToScale) : '-'\n    /*ORIGINAL END*/\n    var unitsLength = ingredient.units.length + 4\n\n    const isAmountEditable = !isFixedRatio || ingredient.id === ingToScale.id\n    const notAllowedClass = isFixedRatio ? 'not-allowed' : ''\n\n\n    return (\n\n\n        <article ref={providedRef} {...dragProp} {...dragHandleProp} className={`ing-preview ${className}`}>\n            <span tabIndex=\"-1\" className={`remove-icon ${notAllowedClass}`} ><FontAwesomeIcon onClick={onRemoveIngredient} icon={faTrash} /></span>\n\n\n            <section className=\"editable ing-name\" >\n                <span tabIndex=\"0\" className={notAllowedClass} onKeyPress={handleKeyPress} onFocus={selectText} title={ingredient.name} data-name=\"name\" onBlur={onHandleIngChange()} contentEditable={!isFixedRatio} suppressContentEditableWarning={true}>{ingredient.name}</span>\n            </section>\n            <section className=\"amount-unit\">\n                <span tabIndex=\"0\" onKeyPress={handleKeyPress} onFocus={selectText} inputMode=\"numeric\" data-name=\"amount\" onBlur={onHandleIngChange('amount')} className={`editable ${!isAmountEditable && 'not-allowed'}`} contentEditable={isAmountEditable} suppressContentEditableWarning={true}>{dishesAmount}</span>\n                <select disabled={isFixedRatio} className={notAllowedClass} tabIndex=\"0\" style={{ width: `${unitsLength}ch` }} onChange={onHandleIngChange()} value={getUnitsValue()} name=\"units\" id=\"units\">\n                    {/* <select disabled={isFixedRatio} className={notAllowedClass} tabIndex=\"0\"  onChange={onHandleIngChange()} value={ingredient.units} name=\"units\" id=\"units\"> */}\n                    <option value=\"g\">g</option>\n                    <option value=\"Kg\">Kg</option>\n                    <option value=\"mL\">mL</option>\n                    <option value=\"L\">L</option>\n                    <option value=\"oz\">oz</option>\n                    <option value=\"cup\">Cup</option>\n                    <option value=\"tableSpoon\">Table spoon</option>\n                    <option value=\"teaSpoon\">Tea spoon</option>\n                    <option value=\"units\">Units</option>\n                </select>\n            </section>\n            <p title={amountToScale} onClick={onChangeRecipeDataWrap} className={`${ingToScaleClass} ${notAllowedClass}`}>{amountToScale || '-'}</p>\n        </article>\n    );\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useMemo, useState } from \"react\";\n\nimport { getIdxEquality } from \"../services/utilService\";\nimport { IngPreview } from \"./ingPreview\";\nimport { useRef } from 'react';\nconst grid = 8;\n\nexport function IngList({\n    ingredients,\n    ingToScale,\n    onChangeRecipeData,\n    handleIngChange,\n    handleEditable,\n    addIngredient,\n    removeIngredient,\n    ingToRemoveIdx,\n    onReOrderIngs,\n    numOfDishes,\n    isFixedRatio,\n    isWeightRatio,\n    handleRecipeAmounts,\n    amountToScaleFixed\n}) {\n\n\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        // some basic styles to make the items look a bit nicer\n\n        userSelect: \"none\",\n        padding: grid * 2,\n        margin: `0 0 ${grid}px 0`,\n\n        // change background colour if dragging\n        background: isDragging ? \"lightgreen\" : \"'grey'\",\n\n        ...draggableStyle\n    });\n\n    const [isDrag, setIsDrag] = useState(false);\n\n\n\n    const getListStyle = isDraggingOver => ({\n        // background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n        // padding: grid,\n        // width: 250\n    });\n\n    const onDragStart = () => {\n        setIsDrag(true)\n\n    }\n    const onDragEnd = (res) => {\n        setIsDrag(false)\n        onReOrderIngs(res)\n    }\n\n    // const onDragEnd = (result) => {\n    //     onReOrderIngs(result)\n    // }\n\n\n\n    return (\n        <>\n\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\n                <Droppable droppableId=\"droppable\">\n                    {(provided, snapshot) => (\n                        <div\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                            style={getListStyle(snapshot.isDraggingOver)}\n                        >\n\n                            <section className='ing-list'>\n                                {ingredients.map((ingredient, idx) =>\n                                    // <>\n                                    <Draggable key={ingredient.id} draggableId={ingredient.id} index={idx}>\n                                        {(provided) => {\n                                            return (\n                                                <IngPreview\n                                                    providedRef={provided.innerRef}\n                                                    dragProp={provided.draggableProps}\n                                                    dragHandleProp={provided.dragHandleProps}\n                                                    removeIngredient={removeIngredient}\n                                                    handleEditable={handleEditable}\n                                                    handleIngChange={handleIngChange}\n                                                    key={ingredient.id}\n                                                    ingredient={ingredient}\n                                                    ingToScale={ingToScale}\n                                                    isFixedRatio={isFixedRatio}\n                                                    isWeightRatio={isWeightRatio}\n                                                    onChangeRecipeData={onChangeRecipeData}\n                                                    numOfDishes={numOfDishes}\n                                                    isRemovedClass={getIdxEquality(idx, ingToRemoveIdx)}\n                                                    ingredientsLength={ingredients.length}\n                                                    handleRecipeAmounts={handleRecipeAmounts}\n                                                    amountToScaleFixed={amountToScaleFixed}\n                                                />\n                                            )\n                                        }}\n                                    </Draggable>\n                                )}\n                                {(provided.placeholder)}\n                                {<button className=\"add-btn\" onClick={addIngredient} ><FontAwesomeIcon icon={faPlus} /></button>}\n                                {/* {(!snapshot.isDraggingOver||true) && <button style={{top: `${snapshot.isDraggingOver?}`}} onClick={addIngredient} className=\"add-btn\"><FontAwesomeIcon icon={faPlus} /></button>} */}\n\n                            </section>\n                        </div>\n\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </>\n    );\n}\n","import { lazy, Suspense, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\n\n\nimport { InputSwitch } from \"../cmps/InputSwitch\";\nimport { Loader } from \"../cmps/Loader\";\nimport { RecipeImg } from \"../cmps/RecipeImg\";\nimport { ShareButton } from \"../cmps/ShareButton\";\nimport { useEffectUpdate } from \"../hooks/useEffectUpdate\";\nimport { useForm } from \"../hooks/useFormRegister\";\nimport { showErrorMsg, showSuccessMsg } from \"../services/eventBusService\";\nimport { recipeService, testCall } from \"../services/recipeService\";\nimport { userService } from \"../services/userService\";\nimport { copyToClipboard, reOrderList, selectText, sleep } from \"../services/utilService\";\nimport { setLoading } from \"../store/actions/loaderActions\";\nimport { IngList } from \"../cmps/IngList\";\n// const IngList = lazy(() => import('../cmps/IngList'))\n\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\nexport default function RecipeEditor() {\n    const [recipe, setRecipe] = useState();\n    const [ingToRemoveIdx, setIngToRemoveIdx] = useState(null);\n    const [numOfDishes, setNumOfDishes] = useState('');\n    const [isEdited, setIsEdited] = useState(false);\n    const [isMounted, setIsMounted] = useState(false);\n    const [errMsg, setErrMsg] = useState('');\n\n    const ingToScaleRef = useRef(null)\n    const [isFixedRatio, setIsFixedRatio] = useState(false)\n    const [isWeightRatio, setIsWeightRatio] = useState(false)\n    const [amountToScaleFixed, setAmountToScaleFixed] = useState()\n    // const [fixedRatioIngredients, setFixedRatioIngredients] = useState(second)\n\n    const dispatch = useDispatch()\n\n\n    const params = useParams()\n\n\n\n    useEffect(() => {\n        loadRecipe()\n\n    }, [params.id]);\n\n    // TODO continue for fixed scale\n    useEffect(() => {\n        if (!recipe) return\n        const ingToScale = getIngredientToScale(recipe)\n        setAmountToScaleFixed(ingToScale.amount)\n    }, [recipe?.ingToScaleId])\n\n    const loadRecipe = async () => {\n        try {\n            const recipe = params.id ? await recipeService.getById(params.id) : recipeService.getEmptyRecipe()\n            setRecipe(recipe)\n\n        } catch (err) {\n            console.log('failing');\n            setErrMsg(\"Sorry,  can't find this recipe at the moment\")\n        } finally {\n\n        }\n    }\n\n\n    useEffectUpdate(() => {\n        if (!isFixedRatio) {\n            const ingToScale = getIngredientToScale(recipe)\n            setAmountToScaleFixed(ingToScale.amount)\n            setIsWeightRatio(false)\n        }\n    }, [isFixedRatio])\n\n    const saveRecipe = async (data, type) => {\n        const { recipe } = data\n        const oldRecipe = cloneDeep(recipe)\n        if (isFixedRatio) return\n        try {\n            setRecipe(recipe)\n\n            await recipeService.save(data, type)\n            return 'res'\n            // * if field is null thats means were removing an ingredient\n            // setIngToRemoveIdx(null)\n\n        } catch (err) {\n            console.log('cant save recipe: ', err);\n            setRecipe(oldRecipe)\n            throw err\n        } finally {\n            dispatch(setLoading(false))\n\n        }\n    }\n\n\n\n\n\n\n    const getIngredientToScale = useCallback((recipe) => {\n        const ingToScale = recipe.ingredients.find(ing => ing.id === recipe.ingToScaleId)\n        return ingToScale\n    }, [recipe]);\n\n    const onChangeRecipeData = async (field, value) => {\n\n        const recipeToSave = { ...recipe, [field]: value }\n        // if (!isEdited) setIsEdited(true)\n        if (field === 'ingToScaleId' || field === 'imgUrl') {\n            saveRecipe({ recipe: recipeToSave, field, value }, 'updateRecipe')\n        } else {\n            triggerSaveBtn(recipeToSave)\n        }\n\n    }\n\n\n    const handleRecipeAmounts = ({ target }, ingredient) => {\n        let amount = +target.innerText\n        if (!amount) amount = ingToScale.amount\n        setAmountToScaleFixed(amount)\n\n    }\n\n    const handleIngChange = async (ev, ingredient) => {\n        const { target } = ev\n        let field, value\n        field = target.name\n        value = target.value\n        if (target.nodeName !== 'SELECT' && target.nodeName !== 'INPUT') {\n            field = target.dataset.name\n            value = target.innerText\n\n            if (field === 'amount') {\n                value = +value\n                if (!value) {\n                    value = ingredient.amount\n                    target.innerText = value\n                    return\n                }\n            }\n        }\n\n        if (value === ingredient[field]) return\n\n        const ingToSave = { ...ingredient, [field]: value }\n        const recipeToSave = {\n            ...recipe,\n            ingredients: recipe.ingredients.map(ing => ing.id === ingredient.id ? ingToSave : ing)\n        }\n\n\n        if (field === 'units' && value === 'units' && recipeToSave.ingToScaleId === ingToSave.id) {\n            return showErrorMsg({ txt: \"Can't change main relative quantity to 'Units'\" })\n        }\n\n        triggerSaveBtn(recipeToSave)\n\n    }\n\n\n    const onSaveRecipe = async () => {\n        try {\n            setIsEdited(false)\n            await saveRecipe({ recipe }, 'general')\n            showSuccessMsg({ txt: 'Recipe saved', time: 2000 })\n        } catch (err) {\n            showErrorMsg({ txt: 'Saving recipe failed', time: 2000 })\n        }\n    }\n\n\n\n    const triggerSaveBtn = (recipeToSave) => {\n        setRecipe(recipeToSave)\n        if (!isEdited) {\n            setIsEdited(true)\n            setIsMounted(true)\n        }\n    }\n\n    const handleNumOfDishesChange = ({ target }) => {\n        let value = +target.value\n\n        if (!value || value < 0) value = ''\n        setNumOfDishes(value)\n\n    }\n\n\n\n\n    const addIngredient = async () => {\n        const ingToAdd = recipeService.getEmptyIngredient()\n        ingToAdd.isNew = true\n        const recipeToSave = {\n            ...recipe,\n            ingredients: [...recipe.ingredients, ingToAdd]\n        }\n        triggerSaveBtn(recipeToSave)\n    }\n\n    /**\n     * remove ingredient\n     * \n     * @param {string} ingId \n     */\n    const removeIngredient = async (ingId) => {\n\n\n        const recipeToSave = {\n            ...recipe,\n            ingredients: recipe.ingredients.filter(ing => ing.id !== ingId)\n        }\n        if (recipe.ingToScaleId === ingId) {\n            recipe.ingToScaleId = ''\n        }\n\n        triggerSaveBtn(recipeToSave)\n    }\n\n\n    const onChangeRecipeImg = async (imgUrl, isRemove) => {\n        if (!imgUrl && !isRemove) return\n        await onChangeRecipeData('imgUrl', imgUrl)\n        dispatch(setLoading(false))\n    }\n\n\n\n\n    const onReOrderIngs = (result) => {\n        const { index: destIdx } = result.destination\n        const { index: sourceIdx } = result.source\n        let ingredients = [...recipe.ingredients]\n        ingredients = reOrderList(ingredients, destIdx, sourceIdx)\n        const recipeToSave = {\n            ...recipe,\n            ingredients: ingredients\n        }\n        if (!isEdited) {\n            saveRecipe({ recipe: recipeToSave }, 'general')\n\n        } else {\n            setRecipe(recipeToSave)\n        }\n    }\n\n    const onCopyToClipBoard = () => {\n        const recipeTxt = recipeService.getRecipeTxt(recipe)\n        copyToClipboard(recipeTxt)\n        showSuccessMsg({ txt: 'Copied to clipboard' })\n    }\n\n\n\n    if (!recipe) return <div>{errMsg || <Loader _isLoading={true} />}</div>\n    const ingToScale = getIngredientToScale(recipe)\n\n\n    const floatBtnClass = isEdited ? 'animate-in' : 'animate-out'\n    const recipeTxt = recipeService.getRecipeTxt(recipe)\n    if (!amountToScaleFixed) return <Loader _isLoading={true} />\n    console.log('isFixedRatio:', isFixedRatio);\n\n    return (\n        <div className='recipe-editor'>\n\n            <section className=\"title-container\">\n                <h2 onFocus={selectText} onBlur={({ target }) => onChangeRecipeData('name', target.innerText)} contentEditable suppressContentEditableWarning={true} >{recipe.name}</h2>\n                <button className=\"btn copy\" onClick={onCopyToClipBoard}>Copy To Clipboard</button>\n            </section>\n            <RecipeImg imgUrl={recipe.imgUrl} isEdited={isEdited} onChangeImg={onChangeRecipeImg} />\n            <section className=\"share-btns\">\n                <ShareButton url=\" \" type=\"whatsapp\" title={recipeTxt} />\n                <ShareButton url=\"facebook.com\" type=\"facebook\" quote={recipeTxt} />\n                <ShareButton url=\"telegram.com\" type=\"telegram\" title={recipeTxt} />\n                <ShareButton url=\"\" type=\"email\" subject={recipe.name} body={recipeTxt} />\n            </section>\n            <section className=\"title-edit\">\n                {/* <section className=\"inner-edit\"> */}\n                {/* <strong className=\"ingredients\">Ingredients</strong> */}\n                <section className=\"input-check-container\">\n                    <InputSwitch id=\"fixedMode\" txt=\"Fixed Mode\" value={isFixedRatio} onChange={() => setIsFixedRatio(prevIsFixed => !prevIsFixed)} />\n                    {isFixedRatio && <InputSwitch id=\"weightMode\" txt=\"Weight Ratio\" value={isWeightRatio} onChange={() => setIsWeightRatio(prevIsWeightRatio => !prevIsWeightRatio)} />}\n                </section>\n                {/* </section> */}\n                <form onSubmit={ev => ev.preventDefault()} className=\"nice-form\">\n                    <div className=\"form__group field dishes-form\">\n                        <input value={numOfDishes} onChange={handleNumOfDishesChange} type=\"number\" id=\"numOfDishes\" name=\"numOfDishes\" className=\"form__field\" placeholder=\"Search by recipe or ingredient\" />\n                        <label htmlFor=\"numOfDishes\" className=\"form__label\">Number Of Dishes</label>\n                    </div>\n                </form>\n            </section>\n            <IngList\n                removeIngredient={removeIngredient}\n                addIngredient={addIngredient}\n                handleIngChange={handleIngChange}\n                ingredients={recipe.ingredients}\n                ingToScale={ingToScale}\n                onChangeRecipeData={onChangeRecipeData}\n                ingToRemoveIdx={ingToRemoveIdx}\n                onReOrderIngs={onReOrderIngs}\n                numOfDishes={numOfDishes}\n                isFixedRatio={isFixedRatio}\n                isWeightRatio={isWeightRatio}\n                handleRecipeAmounts={handleRecipeAmounts}\n                amountToScaleFixed={amountToScaleFixed}\n            />\n\n\n            {/* <section className=\"gap\"></section> */}\n            <section className=\"instructions\">\n\n                <strong className=\"instructions-title\">Instructions</strong>\n                <textarea onClick={(ev) => ev.stopPropagation()} className=\"instructions-area\" onChange={(({ target }) => onChangeRecipeData('instructions', target.value))} value={recipe.instructions} name=\"instructions\" id=\"\" cols=\"30\" rows=\"30\"></textarea>\n            </section>\n\n\n            {/* {isMounted && <button onClick={()=>setIsEdited(false)} className={`edit-btn cancel-changes ${floatBtnClass}`}>Cancel</button>} */}\n            {isMounted && <button onClick={onSaveRecipe} className={`edit-btn save-changes ${floatBtnClass}`}>Save Changes</button>}\n\n        </div>\n    );\n}\n","\r\nfunction store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\nexport const storageService = {\r\n    store,\r\n    load\r\n}\r\n","import { capitalize } from 'lodash'\r\nimport { httpService } from './httpService.js'\r\nimport { storageService } from './storageService.js'\r\nimport { capitalizeSentence, copyToClipboard, getAmountToScale, makeId } from './utilService.js'\r\n\r\nexport const recipeService = {\r\n    query,\r\n    getEmptyRecipe,\r\n    getEmptyIngredient,\r\n    getById,\r\n    remove,\r\n    update,\r\n    save,\r\n    getRecipeTxt\r\n}\r\n\r\nconst STORAGE_KEY = 'recipes'\r\nconst BASE_URL = 'recipe'\r\n\r\n\r\nasync function query(userId, filterBy) {\r\n    try {\r\n        return httpService.get(BASE_URL, { userId, filterBy })\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n\r\nasync function getById(id) {\r\n    try {\r\n        const res = await httpService.get(BASE_URL + '/' + id)\r\n        // if (res)\r\n        return res\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync function remove(recipeId) {\r\n    try {\r\n        return httpService.delete(`${BASE_URL}/${recipeId}`)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n/*TEST START*/\r\nasync function save(data, type) {\r\n    try {\r\n        return data?.recipe._id ? httpService.put(BASE_URL, { data, type }) : httpService.post(BASE_URL, data.recipe)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n/*TEST END*/\r\n\r\n\r\n\r\n/*ORIGINAL START*/\r\n// async function save(recipe, field, value, ingId) {\r\n//     try {\r\n//         return recipe._id ? httpService.put(BASE_URL, { recipe, field, value, ingId }) : httpService.post(BASE_URL, recipe)\r\n//     } catch (err) {\r\n//         return\r\n//     }\r\n// }\r\n/*ORIGINAL END*/\r\n\r\n\r\n\r\n\r\nasync function update(recipe) {\r\n    try {\r\n        return httpService.put(BASE_URL, recipe)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction getEmptyRecipe() {\r\n    const firstIng = getEmptyIngredient()\r\n    return {\r\n        name: 'New Recipe',\r\n        createdAt: Date.now(),\r\n        ingToScaleId: firstIng.id,\r\n        ingredients: [firstIng],\r\n        imgUrl: '',\r\n        instructions: ''\r\n    }\r\n}\r\n\r\nfunction getEmptyIngredient() {\r\n    return {\r\n        id: makeId(),\r\n        name: 'ingredient',\r\n        amount: 1,\r\n        units: 'g'\r\n    }\r\n}\r\n\r\n\r\nfunction getRecipeTxt(recipe) {\r\n    let recipeTxt = ''\r\n    recipeTxt += capitalizeSentence(recipe.name) + '\\n\\n\\n'\r\n    const relativeIng = recipe.ingredients.find(ing => ing.id === recipe.ingToScaleId)\r\n    recipeTxt += '--Ingredients--\\n'\r\n    for (const ingredient of recipe.ingredients) {\r\n\r\n        const relativeAmount = relativeIng && getAmountToScale(ingredient, relativeIng)\r\n        recipeTxt += capitalize(ingredient.name) + '\\t\\t '\r\n        recipeTxt += ingredient.amount + ' ' + ingredient.units + '\\t\\t '\r\n        recipeTxt += relativeAmount\r\n        recipeTxt += '\\n\\n'\r\n    }\r\n    recipeTxt += '\\n\\n'\r\n    recipeTxt += '--Instructions--\\n'\r\n    recipeTxt += recipe.instructions\r\n\r\n\r\n    return recipeTxt\r\n\r\n}\r\n\r\n\r\n","\nexport function setDialogOpen({ txt, title, successCb = () => { }, failCb = () => { } }) {\n  return async (dispatch) => {\n    try {\n      return dispatch({ type: 'SET_DIALOG_OPEN', txt, title, successCb, failCb })\n    } catch (err) {\n      console.log('err:', err);\n      throw err\n    }\n  }\n}\n\nexport function setDialogClose(txt, title) {\n  return async (dispatch) => {\n    try {\n      return dispatch({ type: 'SET_DIALOG_CLOSE' })\n    } catch (err) {\n      console.log('err:', err);\n      throw err\n    }\n  }\n}\n\n"],"names":["useEffectUpdate","cb","dependencies","isFirstTime","useRef","useEffect","current","InputSwitch","value","onChange","txt","id","className","checked","type","name","htmlFor","uploadImg","ev","UPLOAD_URL","formData","FormData","append","target","files","fetch","method","body","then","res","json","catch","err","console","error","RecipeImg","imgUrl","onChangeImg","dispatch","isEdited","useDispatch","useState","isExpand","setIsExpand","inputRef","onUploadImg","_uploadImg","setLoading","url","log","expandClass","imgClass","onClick","prevExpand","style","backgroundImage","stopPropagation","click","icon","faImage","faTrash","faCloudUploadAlt","ref","hidden","DynamicShareBtn","props","WhatsappShareButton","WhatsappIcon","FacebookShareButton","FacebookIcon","TelegramShareButton","TelegramIcon","EmailShareButton","EmailIcon","ShareButton","IngPreview","ingredient","ingToScale","isFixedRatio","isWeightRatio","onChangeRecipeData","ingredientsLength","handleIngChange","removeIngredient","providedRef","dragHandleProp","dragProp","numOfDishes","handleRecipeAmounts","amountToScaleFixed","setClassName","onRemoveIngredient","showErrorMsg","sleep","onHandleIngChange","handleKeyPress","nativeEvent","keyCode","which","charCode","code","blur","window","getSelection","empty","amountToScale","getAmountToScale","dishesAmount","useMemo","amount","toFixed","units","ingToScaleClass","unitsLength","length","isAmountEditable","notAllowedClass","tabIndex","onKeyPress","onFocus","selectText","title","onBlur","contentEditable","suppressContentEditableWarning","inputMode","disabled","width","unitsValue","getUnitsValue","IngList","ingredients","handleEditable","addIngredient","ingToRemoveIdx","onReOrderIngs","setIsDrag","onDragStart","onDragEnd","droppableId","provided","snapshot","droppableProps","innerRef","isDraggingOver","map","idx","draggableId","index","draggableProps","dragHandleProps","isRemovedClass","getIdxEquality","placeholder","faPlus","cloneDeep","require","RecipeEditor","recipe","setRecipe","setNumOfDishes","setIsEdited","isMounted","setIsMounted","errMsg","setErrMsg","setIsFixedRatio","setIsWeightRatio","setAmountToScaleFixed","params","useParams","loadRecipe","getIngredientToScale","ingToScaleId","recipeService","saveRecipe","data","oldRecipe","useCallback","find","ing","field","recipeToSave","triggerSaveBtn","nodeName","dataset","innerText","ingToSave","onSaveRecipe","showSuccessMsg","time","ingToAdd","isNew","ingId","filter","onChangeRecipeImg","isRemove","Loader","_isLoading","floatBtnClass","recipeTxt","copyToClipboard","quote","subject","prevIsFixed","prevIsWeightRatio","onSubmit","preventDefault","result","destIdx","destination","sourceIdx","source","reOrderList","instructions","cols","rows","query","getEmptyRecipe","firstIng","getEmptyIngredient","createdAt","Date","now","getById","remove","update","save","getRecipeTxt","capitalizeSentence","relativeIng","relativeAmount","capitalize","BASE_URL","userId","filterBy","httpService","recipeId","_id","makeId","setDialogOpen","successCb","failCb"],"sourceRoot":""}