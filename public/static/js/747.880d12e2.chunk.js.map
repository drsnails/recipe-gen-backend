{"version":3,"file":"static/js/747.880d12e2.chunk.js","mappings":"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","sources":["hooks/useEffectUpdate.js","store/actions/recipeActions.js","cmps/RecipePreview.jsx","cmps/RecipeList.jsx","cmps/RecipeFilter.jsx","pages/Home.jsx","services/storageService.js","services/recipeService.js","store/actions/dialogMsgActions.js"],"sourcesContent":["import { useEffect, useRef } from \"react\"\n\nexport const useEffectUpdate = (cb, dependencies) => {\n    const isFirstTime = useRef(true)\n\n    useEffect(() => {\n        if (isFirstTime.current) {\n            isFirstTime.current = false\n            return\n        }\n        return cb()\n    }, dependencies)\n}","import { recipeService } from \"../../services/recipeService\"\n\nexport function loadRecipes(userId, filterBy) {\n    return async (dispatch, getState) => {\n        // const { filterBy } = getState().recipeModule\n        try {\n            const recipes = await recipeService.query(userId, filterBy)\n            return recipes\n        } catch (err) {\n            console.log(err);\n        }\n    }\n}\n\n","\nimport { useNavigate } from 'react-router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCopy, faTrash } from '@fortawesome/free-solid-svg-icons'\n\n\nexport function RecipePreview({ recipe, removeRecipe, copyRecipe }) {\n    const navigate = useNavigate()\n    \n\n    const placeholderImgUrl = require('../assets/imgs/pepper-logo.png')\n    const noImgClass = recipe.imgUrl ? '' : 'no-img'\n    return (\n        <section key={recipe._id} onClick={() => navigate(`recipe/${recipe._id}`)} className='recipe-preview'>\n            <section style={{ backgroundImage: `url(${recipe.imgUrl || placeholderImgUrl})` }} className={`img-container ${noImgClass}`}>\n                <section className=\"title-container\">\n                    <span className='title'>\n                        {recipe.name}\n                    </span>\n                </section>\n            </section>\n            {/* <section className=\"title\">\n                <span>\n                    {recipe.name}\n                </span>\n            </section> */}\n            <section onClick={(ev) => ev.stopPropagation()} className='actions'>\n                <button onClick={() => copyRecipe(recipe)} className='copy-recipe-icon'><FontAwesomeIcon icon={faCopy} /></button>\n                <button onClick={() => removeRecipe(recipe._id, recipe.name)} className=\"remove-recipe-icon\" ><FontAwesomeIcon icon={faTrash} /></button>\n            </section>\n        </section>\n    )\n\n}\n","\nimport { RecipePreview } from './RecipePreview';\n\nexport function RecipeList({ recipes, removeRecipe, addRecipe, copyRecipe }) {\n\n    return (\n        <section className='recipe-list simple-cards-grid'>\n\n            <button className='nice-btn blue' onClick={addRecipe}>Add New Recipe</button>\n            {recipes && recipes.map(recipe =>\n                <RecipePreview key={recipe._id} recipe={recipe} removeRecipe={removeRecipe} copyRecipe={copyRecipe} />\n            )}\n\n\n        </section>\n    )\n\n}\n","import { useEffectUpdate } from \"../hooks/useEffectUpdate\"\nimport { useForm } from \"../hooks/useFormRegister\"\n\nexport function RecipeFilter({ filterBy, onChangeFilterBy }) {\n\n    const [_filterBy, setFilterBy, register] = useForm(filterBy, onChangeFilterBy)\n\n    useEffectUpdate(() => {\n        setFilterBy(filterBy)\n    }, [filterBy])\n\n    return (\n        <form onSubmit={ev => ev.preventDefault()} className=\"recipe-filter nice-form\">\n            <section className=\"form__group field search\">\n                <input {...register('term')} className=\"form__field\" placeholder=\"Search by recipe or ingredient\" />\n                <label htmlFor=\"term\" className=\"form__label\">Search by recipe or ingredient</label>\n            </section>\n\n            <section className=\"form__group field sort\">\n                <select {...register('sortBy')}>\n                    <option value=\"\">Sort by</option>\n                    <option value=\"createdAt\">Date</option>\n                    <option value=\"name\">Alphabetically</option>\n                </select>\n            </section>\n\n            {/* <section className=\"sort-dir\">\n\n                <span>{'â¬†'}</span>\n            </section> */}\n        </form>\n    )\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\n// import { useTransition } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n// var cloneDeep = require('lodash.clonedeep');\nimport cloneDeep from 'lodash.clonedeep'\n\nimport { recipeService } from '../services/recipeService';\nimport { userService } from '../services/userService';\nimport { loadRecipes } from '../store/actions/recipeActions';\nimport { RecipeList } from '../cmps/RecipeList';\nimport { RecipeFilter } from '../cmps/RecipeFilter';\nimport { useEffectUpdate } from '../hooks/useEffectUpdate';\nimport { setDialogOpen } from \"../store/actions/dialogMsgActions\";\nimport { showErrorMsg } from '../services/eventBusService';\nimport { goToTop } from '../services/utilService';\n\n\nexport default function Home() {\n\n    const dispatch = useDispatch()\n    const startIdxRef = useRef(0)\n    const [recipes, setRecipes] = useState(null);\n    const [filterBy, setFilterBy] = useState({ term: '', sortBy: '', sortDir: 1, startIdx: startIdxRef.current })\n    // const [isPending, startTransition] = useTransition()\n\n    let { loggedInUser } = useSelector(state => state.userModule)\n\n    useEffect(() => {\n        // (async () => {\n        //     const userFromSession = await userService.getUserFromSession()\n        //     console.log('userFromSession', userFromSession)\n        // })()\n        loggedInUser = loggedInUser || userService.getLoggedInUser()\n        _loadRecipes()\n    }, []);\n\n    useEffectUpdate(() => {\n\n        loggedInUser && _loadRecipes()\n\n    }, [filterBy]);\n\n\n\n    const _loadRecipes = async () => {\n        const recipes = await dispatch(loadRecipes(loggedInUser._id, filterBy))\n        setRecipes(recipes)\n\n    }\n\n    const saveRecipe = async (recipe) => {\n        try {\n            const newRecipe = await recipeService.save({ recipe })\n            setRecipes([newRecipe, ...recipes])\n        } catch (err) {\n            console.log('err:', err);\n            showErrorMsg({ txt: \"Couldn't add recipe\" })\n        }\n    }\n\n\n    const onAddRecipe = async () => {\n        try {\n            const emptyRecipe = recipeService.getEmptyRecipe()\n            emptyRecipe.userId = loggedInUser._id\n            const _filterBy = { ...filterBy, sortBy: '' }\n            setFilterBy(_filterBy)\n            saveRecipe(emptyRecipe)\n\n        } catch (error) {\n            console.log('error:', error)\n\n        }\n    }\n\n\n    const onCopyRecipe = (recipe) => {\n        const copiedRecipe = cloneDeep(recipe)\n        delete copiedRecipe._id\n        const currRecipeName = copiedRecipe.name.replace(/ \\(\\d+\\)$/, '')\n        const recipeNum = recipes.filter(recipe => recipe.name.slice(0, currRecipeName.length) === currRecipeName).length + 1\n        copiedRecipe.name = currRecipeName + ` (${recipeNum})`\n        saveRecipe(copiedRecipe)\n        goToTop()\n    }\n\n    const onRemoveRecipe = (recipeId, recipeName) => {\n        dispatch(setDialogOpen({\n            txt: 'This recipe will be permanently deleted',\n            title: `Are you sure you want to delete \"${recipeName}\"?`,\n            successCb: () => removeRecipe(recipeId)\n        }))\n\n    }\n\n    const removeRecipe = async (recipeId) => {\n        try {\n            await recipeService.remove(recipeId)\n            const newRecipes = recipes.filter(recipe => recipe._id !== recipeId)\n            setRecipes(newRecipes)\n\n        } catch (err) {\n            console.log('err:', err)\n\n        }\n    }\n\n    const onChangeFilterBy = (filterBy) => {\n        setFilterBy(filterBy)\n\n    }\n    // const onChangeFilterBy = useCallback((filterBy) => {\n    //     setFilterBy(filterBy)\n    //     _loadRecipes()\n\n    // }, []);\n\n\n    return (\n        <div className='home'>\n            {loggedInUser && <h2 className='greet'>Welcome, {loggedInUser.username}</h2>}\n\n            {/* <label for=\"ice-cream-choice\">Choose a flavor:</label> */}\n\n            <RecipeFilter filterBy={filterBy} onChangeFilterBy={onChangeFilterBy} />\n            <RecipeList copyRecipe={onCopyRecipe} recipes={recipes} removeRecipe={onRemoveRecipe} addRecipe={onAddRecipe} />\n        </div>\n    );\n}\n","\r\nfunction store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\nexport const storageService = {\r\n    store,\r\n    load\r\n}\r\n","import { capitalize } from 'lodash'\r\nimport { httpService } from './httpService.js'\r\nimport { storageService } from './storageService.js'\r\nimport { capitalizeSentence, copyToClipboard, getAmountToScale, makeId } from './utilService.js'\r\n\r\nexport const recipeService = {\r\n    query,\r\n    getEmptyRecipe,\r\n    getEmptyIngredient,\r\n    getById,\r\n    remove,\r\n    update,\r\n    save,\r\n    getRecipeTxt\r\n}\r\n\r\nconst STORAGE_KEY = 'recipes'\r\nconst BASE_URL = 'recipe'\r\n\r\n\r\nasync function query(userId, filterBy) {\r\n    try {\r\n        return httpService.get(BASE_URL, { userId, filterBy })\r\n    } catch (err) {\r\n        return \r\n    }\r\n}\r\n\r\n\r\n\r\nasync function getById(id) {\r\n    try {\r\n        const res = await httpService.get(BASE_URL + '/' + id)\r\n        // if (res)\r\n        return res\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync function remove(recipeId) {\r\n    try {\r\n        return httpService.delete(`${BASE_URL}/${recipeId}`)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n/*TEST START*/\r\nasync function save(data, type) {\r\n    try {\r\n        return data?.recipe._id ? httpService.put(BASE_URL, { data, type }) : httpService.post(BASE_URL, data.recipe)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n/*TEST END*/\r\n\r\n\r\n\r\n/*ORIGINAL START*/\r\n// async function save(recipe, field, value, ingId) {\r\n//     try {\r\n//         return recipe._id ? httpService.put(BASE_URL, { recipe, field, value, ingId }) : httpService.post(BASE_URL, recipe)\r\n//     } catch (err) {\r\n//         return\r\n//     }\r\n// }\r\n/*ORIGINAL END*/\r\n\r\n\r\n\r\n\r\nasync function update(recipe) {\r\n    try {\r\n        return httpService.put(BASE_URL, recipe)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction getEmptyRecipe() {\r\n    const firstIng = getEmptyIngredient()\r\n    return {\r\n        name: 'New Recipe',\r\n        createdAt: Date.now(),\r\n        ingToScaleId: firstIng.id,\r\n        ingredients: [firstIng],\r\n        imgUrl: '',\r\n        instructions: ''\r\n    }\r\n}\r\n\r\nfunction getEmptyIngredient() {\r\n    return {\r\n        id: makeId(),\r\n        name: 'ingredient',\r\n        amount: 1,\r\n        units: 'g'\r\n    }\r\n}\r\n\r\n\r\nfunction getRecipeTxt(recipe) {\r\n    let recipeTxt = ''\r\n    recipeTxt += capitalizeSentence(recipe.name) + '\\n\\n\\n'\r\n    const relativeIng = recipe.ingredients.find(ing => ing.id === recipe.ingToScaleId)\r\n    recipeTxt += '--Ingredients--\\n'\r\n    for (const ingredient of recipe.ingredients) {\r\n\r\n        const relativeAmount = relativeIng && getAmountToScale(ingredient, relativeIng)\r\n        recipeTxt += '* '\r\n        recipeTxt += capitalize(ingredient.name) + '\\t|\\t'\r\n        recipeTxt += ingredient.amount + ' ' + getFormattedIngUnit(ingredient.units) + '\\t'\r\n        // recipeTxt += relativeAmount ? '|\\t' + relativeAmount : ''\r\n        recipeTxt += '\\n\\n'\r\n    }\r\n    recipeTxt += '\\n\\n'\r\n    recipeTxt += '--Instructions--\\n'\r\n    recipeTxt += recipe.instructions\r\n\r\n\r\n    return recipeTxt\r\n\r\n}\r\n\r\nfunction getFormattedIngUnit(str) {\r\n    if (str.length <= 2) return str\r\n    return capitalize(separateKebabCase(str))\r\n}\r\n\r\nconst separateKebabCase = str => {\r\n\r\n    return str && str\r\n        .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n        .map(x => x.toLowerCase())\r\n        .join(' ');\r\n\r\n}\r\n\r\n","\nexport function setDialogOpen({ txt, title, successCb = () => { }, failCb = () => { } }) {\n    return async (dispatch) => {\n        try {\n            return dispatch({ type: 'SET_DIALOG_OPEN', txt, title, successCb, failCb })\n        } catch (err) {\n            console.log('err:', err);\n            throw err\n        }\n    }\n}\n\nexport function setDialogClose(txt, title) {\n    return async (dispatch) => {\n        try {\n            return dispatch({ type: 'SET_DIALOG_CLOSE' })\n        } catch (err) {\n            console.log('err:', err);\n            throw err\n        }\n    }\n}\n\n"],"names":["useEffectUpdate","cb","dependencies","isFirstTime","useRef","useEffect","current","loadRecipes","userId","filterBy","dispatch","getState","recipeService","recipes","console","log","RecipePreview","recipe","removeRecipe","copyRecipe","navigate","useNavigate","placeholderImgUrl","require","noImgClass","imgUrl","onClick","_id","className","style","backgroundImage","name","ev","stopPropagation","icon","faCopy","faTrash","RecipeList","addRecipe","map","RecipeFilter","onChangeFilterBy","useForm","setFilterBy","register","onSubmit","preventDefault","placeholder","htmlFor","value","Home","useDispatch","startIdxRef","useState","setRecipes","term","sortBy","sortDir","startIdx","loggedInUser","useSelector","state","userModule","userService","_loadRecipes","saveRecipe","newRecipe","showErrorMsg","txt","onAddRecipe","emptyRecipe","_filterBy","error","recipeId","newRecipes","filter","username","copiedRecipe","cloneDeep","currRecipeName","replace","recipeNum","slice","length","goToTop","recipeName","setDialogOpen","title","successCb","query","getEmptyRecipe","firstIng","getEmptyIngredient","createdAt","Date","now","ingToScaleId","id","ingredients","instructions","getById","remove","update","save","getRecipeTxt","recipeTxt","capitalizeSentence","relativeIng","find","ing","ingredient","getAmountToScale","capitalize","amount","getFormattedIngUnit","units","BASE_URL","httpService","res","data","type","makeId","str","separateKebabCase","match","x","toLowerCase","join","failCb"],"sourceRoot":""}