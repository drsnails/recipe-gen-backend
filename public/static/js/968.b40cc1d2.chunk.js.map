{"version":3,"file":"static/js/968.b40cc1d2.chunk.js","mappings":"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","sources":["hooks/useEffectUpdate.js","cmps/InputSwitch.jsx","services/cloudinary-service.js","cmps/RecipeImg.jsx","cmps/ShareButton.jsx","pages/RecipeEditor.jsx","services/storageService.js","services/recipeService.js","store/actions/dialogMsgActions.js"],"sourcesContent":["import { useEffect, useRef } from \"react\"\n\nexport const useEffectUpdate = (cb, dependencies) => {\n    const isFirstTime = useRef(true)\n\n    useEffect(() => {\n        if (isFirstTime.current) {\n            isFirstTime.current = false\n            return\n        }\n        cb()\n    }, dependencies)\n}","\nexport function InputSwitch({ value, onChange }) {\n    return (\n        <div className='input-switch'>\n            <input checked={value} onChange={onChange} type=\"checkbox\" name=\"switch\" id=\"cb2\" className=\"tgl tgl-light\" />\n            <label  htmlFor=\"cb2\" className=\"tgl-btn\"></label>\n            <h4>Fixed Mode?</h4>\n        </div>\n    )\n}\n\n\n\n// h4 iOS\n// input#cb2.tgl.tgl-ios(type = \"checkbox\")\n// label.tgl-btn(for = \"cb2\")\n\n","export async function uploadImg(ev) {\n    const CLOUD_NAME = 'recipe-gen'\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\n    const formData = new FormData();\n    formData.append('file', ev.target.files[0])\n    formData.append('upload_preset', 'recipe-gen');\n\n    return fetch(UPLOAD_URL, {\n        method: 'POST',\n        body: formData\n    })\n        .then(res => res.json())\n        .then(res => {\n            return res\n        })\n        .catch(err => console.error(err))\n}\n","import { useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { uploadImg } from '../services/cloudinary-service'\nimport { setDialogOpen } from '../store/actions/dialogMsgActions'\nimport { setLoading } from '../store/actions/loaderActions'\nimport { faCloudUploadAlt, faImage, faTrash } from '@fortawesome/free-solid-svg-icons'\nexport function RecipeImg({ imgUrl, onChangeImg, isEdited }) {\n    const dispatch = useDispatch()\n    const [isExpand, setIsExpand] = useState();\n    const inputRef = useRef()\n\n    const onUploadImg = async (ev) => {\n\n        const _uploadImg = async () => {\n            if (!ev.target.files[0]) return\n            try {\n                dispatch(setLoading(true))\n                const res = await uploadImg(ev)\n\n                onChangeImg(res.url)\n            } catch (err) {\n                console.log(err);\n            } finally {\n\n            }\n        }\n\n        _uploadImg(ev)\n        // if (isEdited) {\n        //     dispatch(setDialogOpen({ txt: 'Are you sure you want to proceed?', title: 'This will save any unsaved changes', successCb: () => _uploadImg(ev) }))\n\n        // } else {\n        //     _uploadImg(ev)\n        // }\n\n\n    }\n\n\n\n    const onTriggerImgUpload = (ev) => {\n        ev.stopPropagation()\n        inputRef.current.click()\n    }\n\n\n    const onRemoveImg = (ev) => {\n        ev.stopPropagation()\n        onChangeImg(null, true)\n        setIsExpand(false)\n    }\n\n\n    const expandClass = isExpand ? 'expand' : ''\n    const imgClass = imgUrl ? 'img-class' : ''\n    // const imgSrc = require('../assets/imgs/cloud-upload.jpeg')\n    return (\n        <section className='recipe-img-container'>\n\n            <section className={`recipe-img ${expandClass} ${imgClass}`}>\n                {imgUrl ?\n                    <section onClick={() => setIsExpand(prevExpand => !prevExpand)} className=\"img-container\" style={{ backgroundImage: `url(${imgUrl})` }} >\n                        <section className={`img-actions ${expandClass}`}>\n                            <button onClick={onTriggerImgUpload}><FontAwesomeIcon icon={faImage} /> <span>Change</span></button>\n                            <button onClick={onRemoveImg}><FontAwesomeIcon icon={faTrash} /> <span>Remove</span></button>\n                        </section>\n                    </section> :\n\n                    <section className=\"img-upload\">\n                        <label htmlFor=\"imgUploader\">\n                            {/* <img className='img-placeholder' src={imgSrc} alt=\"\" /> */}\n                            <FontAwesomeIcon className='upload-icon' icon={faCloudUploadAlt} />\n                        </label>\n                    </section>}\n                <input ref={inputRef} type=\"file\" id=\"imgUploader\" onChange={onUploadImg} hidden />\n            </section>\n        </section>\n    )\n}\n","import {\n    EmailShareButton,\n    FacebookShareButton,\n    RedditShareButton,\n    TelegramShareButton,\n    TwitterShareButton,\n    WhatsappShareButton,\n    WhatsappIcon,\n    FacebookIcon,\n    TelegramIcon,\n    EmailIcon,\n} from \"react-share\";\n\n\nconst DynamicShareBtn = (props) => {\n    switch (props.type) {\n        case 'whatsapp':\n            return <WhatsappShareButton {...props}><WhatsappIcon /></WhatsappShareButton>;\n        case 'facebook':\n            return <FacebookShareButton {...props}><FacebookIcon /></FacebookShareButton>;\n        case 'telegram':\n            return <TelegramShareButton {...props}><TelegramIcon/></TelegramShareButton>;\n        case 'email':\n            return <EmailShareButton {...props}><EmailIcon/></EmailShareButton>;\n        default:\n            return <></>;\n    }\n}\n\nexport function ShareButton(props) {\n    return (\n        <section className='share-btn'>\n            {/* <WhatsappShareButton url=\" \" title=\"My Recipe\"  ><WhatsappIcon /></WhatsappShareButton> */}\n            <DynamicShareBtn {...props} />\n        </section>\n    );\n}\n","import { lazy, Suspense, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\n\n\nimport { InputSwitch } from \"../cmps/InputSwitch\";\nimport { Loader } from \"../cmps/Loader\";\nimport { RecipeImg } from \"../cmps/RecipeImg\";\nimport { ShareButton } from \"../cmps/ShareButton\";\nimport { useEffectUpdate } from \"../hooks/useEffectUpdate\";\nimport { useForm } from \"../hooks/useFormRegister\";\nimport { showErrorMsg, showSuccessMsg } from \"../services/eventBusService\";\nimport { recipeService } from \"../services/recipeService\";\nimport { userService } from \"../services/userService\";\nimport { copyToClipboard, reOrderList, selectText, sleep } from \"../services/utilService\";\nimport { setLoading } from \"../store/actions/loaderActions\";\n\n\n// import { IngList } from \"../cmps/IngList\";\nconst IngList = lazy(() => import('../cmps/IngList'))\n\nvar cloneDeep = require('lodash.clonedeep');\n\nexport default function RecipeEditor() {\n    const [recipe, setRecipe] = useState();\n    const [ingToRemoveIdx, setIngToRemoveIdx] = useState(null);\n    const [numOfDishes, setNumOfDishes] = useState('');\n    const [isEdited, setIsEdited] = useState(false);\n    const [isMounted, setIsMounted] = useState(false);\n    const [errMsg, setErrMsg] = useState('');\n\n    const ingToScaleRef = useRef(null)\n    const [isFixedRatio, setIsFixedRatio] = useState(false)\n    const [amountToScaleFixed, setAmountToScaleFixed] = useState()\n    // const [fixedRatioIngredients, setFixedRatioIngredients] = useState(second)\n\n    const dispatch = useDispatch()\n\n\n    const params = useParams()\n\n\n\n    useEffect(() => {\n        loadRecipe()\n    }, [params.id]);\n\n    // TODO continue for fixed scale\n    useEffect(() => {\n        if (!recipe) return\n        const ingToScale = getIngredientToScale(recipe)\n        setAmountToScaleFixed(ingToScale.amount)\n    }, [recipe?.ingToScaleId])\n\n    const loadRecipe = async () => {\n        try {\n            const recipe = params.id ? await recipeService.getById(params.id) : recipeService.getEmptyRecipe()\n            setRecipe(recipe)\n\n        } catch (err) {\n            console.log('failing');\n            setErrMsg(\"Sorry,  can't find this recipe at the moment\")\n        } finally {\n\n        }\n    }\n\n\n    useEffectUpdate(() => {\n        if (!isFixedRatio) {\n            const ingToScale = getIngredientToScale(recipe)\n            setAmountToScaleFixed(ingToScale.amount)\n        }\n    }, [isFixedRatio])\n\n    const saveRecipe = async (data, type) => {\n        const { recipe } = data\n        const oldRecipe = cloneDeep(recipe)\n        if (isFixedRatio) return\n        try {\n            setRecipe(recipe)\n\n            await recipeService.save(data, type)\n            return 'res'\n            // * if field is null thats means were removing an ingredient\n            // setIngToRemoveIdx(null)\n\n        } catch (err) {\n            console.log('cant save recipe: ', err);\n            setRecipe(oldRecipe)\n            throw err\n        } finally {\n            dispatch(setLoading(false))\n\n        }\n    }\n\n\n\n\n\n\n    const getIngredientToScale = useCallback((recipe) => {\n        const ingToScale = recipe.ingredients.find(ing => ing.id === recipe.ingToScaleId)\n        return ingToScale\n    }, [recipe]);\n\n    const onChangeRecipeData = async (field, value) => {\n\n        const recipeToSave = { ...recipe, [field]: value }\n        // if (!isEdited) setIsEdited(true)\n        if (field === 'ingToScaleId' || field === 'imgUrl') {\n            saveRecipe({ recipe: recipeToSave, field, value }, 'updateRecipe')\n        } else {\n            triggerSaveBtn(recipeToSave)\n        }\n\n    }\n\n\n    const handleRecipeAmounts = ({ target }, ingredient) => {\n        let amount = +target.innerText\n        if (!amount) amount = ingToScale.amount\n        setAmountToScaleFixed(amount)\n    }\n\n    const handleIngChange = async (ev, ingredient) => {\n        const { target } = ev\n        let field, value\n        field = target.name\n        value = target.value\n        if (target.nodeName !== 'SELECT' && target.nodeName !== 'INPUT') {\n            field = target.dataset.name\n            value = target.innerText\n\n            if (field === 'amount') {\n                value = +value\n                if (!value) {\n                    value = ingredient.amount\n                    target.innerText = value\n                    return\n                }\n            }\n        }\n\n        if (value === ingredient[field]) return\n\n        const ingToSave = { ...ingredient, [field]: value }\n        const recipeToSave = {\n            ...recipe,\n            ingredients: recipe.ingredients.map(ing => ing.id === ingredient.id ? ingToSave : ing)\n        }\n\n\n        if (field === 'units' && value === 'units' && recipeToSave.ingToScaleId === ingToSave.id) {\n            return showErrorMsg({ txt: \"Can't change main relative quantity to 'Units'\" })\n        }\n\n        triggerSaveBtn(recipeToSave)\n\n    }\n\n\n    const onSaveRecipe = async () => {\n        try {\n            setIsEdited(false)\n            await saveRecipe({ recipe }, 'general')\n            showSuccessMsg({ txt: 'Recipe saved', time: 2000 })\n        } catch (err) {\n            showErrorMsg({ txt: 'Saving recipe failed', time: 2000 })\n        }\n    }\n\n\n\n    const triggerSaveBtn = (recipeToSave) => {\n        setRecipe(recipeToSave)\n        if (!isEdited) {\n            setIsEdited(true)\n            setIsMounted(true)\n        }\n    }\n\n    const handleNumOfDishesChange = ({ target }) => {\n        let value = +target.value\n\n        if (!value || value < 0) value = ''\n        setNumOfDishes(value)\n\n    }\n\n\n\n\n    const addIngredient = async () => {\n        const ingToAdd = recipeService.getEmptyIngredient()\n        ingToAdd.isNew = true\n        const recipeToSave = {\n            ...recipe,\n            ingredients: [...recipe.ingredients, ingToAdd]\n        }\n        triggerSaveBtn(recipeToSave)\n    }\n\n    /**\n     * remove ingredient\n     * \n     * @param {string} ingId \n     */\n    const removeIngredient = async (ingId) => {\n\n\n        const recipeToSave = {\n            ...recipe,\n            ingredients: recipe.ingredients.filter(ing => ing.id !== ingId)\n        }\n        if (recipe.ingToScaleId === ingId) {\n            recipe.ingToScaleId = ''\n        }\n\n        triggerSaveBtn(recipeToSave)\n    }\n\n\n    const onChangeRecipeImg = async (imgUrl, isRemove) => {\n        if (!imgUrl && !isRemove) return\n        await onChangeRecipeData('imgUrl', imgUrl)\n        dispatch(setLoading(false))\n    }\n\n\n\n    const onReOrderIngs = (result) => {\n        const { index: destIdx } = result.destination\n        const { index: sourceIdx } = result.source\n        let ingredients = [...recipe.ingredients]\n        ingredients = reOrderList(ingredients, destIdx, sourceIdx)\n        const recipeToSave = {\n            ...recipe,\n            ingredients: ingredients\n        }\n        if (!isEdited) {\n            saveRecipe({ recipe: recipeToSave }, 'general')\n\n        } else {\n            setRecipe(recipeToSave)\n        }\n    }\n\n    const onCopyToClipBoard = () => {\n        const recipeTxt = recipeService.getRecipeTxt(recipe)\n        copyToClipboard(recipeTxt)\n        showSuccessMsg({ txt: 'Copied to clipboard' })\n    }\n\n\n\n    if (!recipe) return <div>{errMsg || <Loader _isLoading={true} />}</div>\n    const ingToScale = getIngredientToScale(recipe)\n\n\n    const floatBtnClass = isEdited ? 'animate-in' : 'animate-out'\n    const recipeTxt = recipeService.getRecipeTxt(recipe)\n    if (!amountToScaleFixed) return <Loader _isLoading={true} />\n\n    return (\n        <div className='recipe-editor'>\n\n            <section className=\"title-container\">\n                <h2 onFocus={selectText} onBlur={({ target }) => onChangeRecipeData('name', target.innerText)} contentEditable suppressContentEditableWarning={true} >{recipe.name}</h2>\n                <button className=\"btn copy\" onClick={onCopyToClipBoard}>Copy To Clipboard</button>\n            </section>\n            <RecipeImg imgUrl={recipe.imgUrl} isEdited={isEdited} onChangeImg={onChangeRecipeImg} />\n            <section className=\"share-btns\">\n                <ShareButton url=\" \" type=\"whatsapp\" title={recipeTxt} />\n                <ShareButton url=\"facebook.com\" type=\"facebook\" quote={recipeTxt} />\n                <ShareButton url=\"telegram.com\" type=\"telegram\" title={recipeTxt} />\n                <ShareButton url=\"\" type=\"email\" subject={recipe.name} body={recipeTxt} />\n            </section>\n            <section className=\"title-edit\">\n                {/* <section className=\"inner-edit\"> */}\n                {/* <strong className=\"ingredients\">Ingredients</strong> */}\n                <InputSwitch value={isFixedRatio} onChange={() => setIsFixedRatio(prevIsFixed => !prevIsFixed)} />\n                {/* </section> */}\n                <form onSubmit={ev => ev.preventDefault()} className=\"nice-form\">\n                    <div className=\"form__group field dishes-form\">\n                        <input value={numOfDishes} onChange={handleNumOfDishesChange} type=\"number\" id=\"numOfDishes\" name=\"numOfDishes\" className=\"form__field\" placeholder=\"Search by recipe or ingredient\" />\n                        <label htmlFor=\"numOfDishes\" className=\"form__label\">Number Of Dishes</label>\n                    </div>\n                </form>\n            </section>\n            <IngList\n                removeIngredient={removeIngredient}\n                addIngredient={addIngredient}\n                handleIngChange={handleIngChange}\n                ingredients={recipe.ingredients}\n                ingToScale={ingToScale}\n                onChangeRecipeData={onChangeRecipeData}\n                ingToRemoveIdx={ingToRemoveIdx}\n                onReOrderIngs={onReOrderIngs}\n                numOfDishes={numOfDishes}\n                isFixedRatio={isFixedRatio}\n                handleRecipeAmounts={handleRecipeAmounts}\n                amountToScaleFixed={amountToScaleFixed}\n            />\n\n\n            {/* <section className=\"gap\"></section> */}\n            <section className=\"instructions\">\n\n                <strong className=\"instructions-title\">Instructions</strong>\n                <textarea onClick={(ev) => ev.stopPropagation()} className=\"instructions-area\" onChange={(({ target }) => onChangeRecipeData('instructions', target.value))} value={recipe.instructions} name=\"instructions\" id=\"\" cols=\"30\" rows=\"30\"></textarea>\n            </section>\n\n\n            {/* {isMounted && <button onClick={()=>setIsEdited(false)} className={`edit-btn cancel-changes ${floatBtnClass}`}>Cancel</button>} */}\n            {isMounted && <button onClick={onSaveRecipe} className={`edit-btn save-changes ${floatBtnClass}`}>Save Changes</button>}\n\n        </div>\n    );\n}\n","\r\nfunction store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\nexport const storageService = {\r\n    store,\r\n    load\r\n}\r\n","import { capitalize } from 'lodash'\r\nimport { httpService } from './httpService.js'\r\nimport { storageService } from './storageService.js'\r\nimport { capitalizeSentence, copyToClipboard, getAmountToScale, makeId } from './utilService.js'\r\n\r\nexport const recipeService = {\r\n    query,\r\n    getEmptyRecipe,\r\n    getEmptyIngredient,\r\n    getById,\r\n    remove,\r\n    update,\r\n    save,\r\n    getRecipeTxt\r\n}\r\n\r\nconst STORAGE_KEY = 'recipes'\r\nconst BASE_URL = 'recipe'\r\n\r\n\r\nasync function query(userId, filterBy) {\r\n    try {\r\n        return httpService.get(BASE_URL, { userId, filterBy })\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n\r\nasync function getById(id) {\r\n    try {\r\n        const res = await httpService.get(BASE_URL + '/' + id)\r\n        // if (res)\r\n        return res\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync function remove(recipeId) {\r\n    try {\r\n        return httpService.delete(`${BASE_URL}/${recipeId}`)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n/*TEST START*/\r\nasync function save(data, type) {\r\n    try {\r\n        return data?.recipe._id ? httpService.put(BASE_URL, {data, type}) : httpService.post(BASE_URL, data.recipe)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n/*TEST END*/\r\n\r\n\r\n\r\n/*ORIGINAL START*/\r\n// async function save(recipe, field, value, ingId) {\r\n//     try {\r\n//         return recipe._id ? httpService.put(BASE_URL, { recipe, field, value, ingId }) : httpService.post(BASE_URL, recipe)\r\n//     } catch (err) {\r\n//         return\r\n//     }\r\n// }\r\n/*ORIGINAL END*/\r\n\r\n\r\n\r\n\r\nasync function update(recipe) {\r\n    try {\r\n        return httpService.put(BASE_URL, recipe)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction getEmptyRecipe() {\r\n    const firstIng = getEmptyIngredient()\r\n    return {\r\n        name: 'New Recipe',\r\n        createdAt: Date.now(),\r\n        ingToScaleId: firstIng.id,\r\n        ingredients: [firstIng],\r\n        imgUrl:'',\r\n        instructions: ''\r\n    }\r\n}\r\n\r\nfunction getEmptyIngredient() {\r\n    return {\r\n        id: makeId(),\r\n        name: 'ingredient',\r\n        amount: 1,\r\n        units: 'g'\r\n    }\r\n}\r\n\r\n\r\nfunction getRecipeTxt(recipe) {\r\n    let recipeTxt = ''\r\n    recipeTxt += capitalizeSentence(recipe.name) + '\\n\\n\\n'\r\n    const relativeIng = recipe.ingredients.find(ing => ing.id === recipe.ingToScaleId)\r\n    recipeTxt += '--Ingredients--\\n'\r\n    for (const ingredient of recipe.ingredients) {\r\n        \r\n        const relativeAmount = relativeIng && getAmountToScale(ingredient, relativeIng)\r\n        recipeTxt += capitalize(ingredient.name) + '\\t\\t '\r\n        recipeTxt += ingredient.amount + ' ' + ingredient.units + '\\t\\t '\r\n        recipeTxt += relativeAmount\r\n        recipeTxt += '\\n\\n'\r\n    }\r\n    recipeTxt += '\\n\\n'\r\n    recipeTxt += '--Instructions--\\n'\r\n    recipeTxt += recipe.instructions\r\n\r\n    \r\n    return recipeTxt\r\n\r\n}\r\n\r\n\r\n","\nexport function setDialogOpen({ txt, title, successCb = () => { }, failCb = () => { } }) {\n  return async (dispatch) => {\n    try {\n      return dispatch({ type: 'SET_DIALOG_OPEN', txt, title, successCb, failCb })\n    } catch (err) {\n      console.log('err:', err);\n      throw err\n    }\n  }\n}\n\nexport function setDialogClose(txt, title) {\n  return async (dispatch) => {\n    try {\n      return dispatch({ type: 'SET_DIALOG_CLOSE' })\n    } catch (err) {\n      console.log('err:', err);\n      throw err\n    }\n  }\n}\n\n"],"names":["useEffectUpdate","cb","dependencies","isFirstTime","useRef","useEffect","current","InputSwitch","value","onChange","className","checked","type","name","id","htmlFor","uploadImg","ev","UPLOAD_URL","formData","FormData","append","target","files","fetch","method","body","then","res","json","catch","err","console","error","RecipeImg","imgUrl","onChangeImg","dispatch","isEdited","useDispatch","useState","isExpand","setIsExpand","inputRef","onUploadImg","_uploadImg","setLoading","url","log","expandClass","imgClass","onClick","prevExpand","style","backgroundImage","stopPropagation","click","icon","faImage","faTrash","faCloudUploadAlt","ref","hidden","DynamicShareBtn","props","WhatsappShareButton","WhatsappIcon","FacebookShareButton","FacebookIcon","TelegramShareButton","TelegramIcon","EmailShareButton","EmailIcon","ShareButton","IngList","lazy","cloneDeep","require","RecipeEditor","recipe","setRecipe","ingToRemoveIdx","numOfDishes","setNumOfDishes","setIsEdited","isMounted","setIsMounted","errMsg","setErrMsg","isFixedRatio","setIsFixedRatio","amountToScaleFixed","setAmountToScaleFixed","params","useParams","loadRecipe","ingToScale","getIngredientToScale","amount","ingToScaleId","recipeService","saveRecipe","data","oldRecipe","useCallback","ingredients","find","ing","onChangeRecipeData","field","recipeToSave","triggerSaveBtn","handleIngChange","ingredient","nodeName","dataset","innerText","ingToSave","map","showErrorMsg","txt","onSaveRecipe","showSuccessMsg","time","addIngredient","ingToAdd","isNew","removeIngredient","ingId","filter","onChangeRecipeImg","isRemove","Loader","_isLoading","floatBtnClass","recipeTxt","onFocus","selectText","onBlur","contentEditable","suppressContentEditableWarning","copyToClipboard","title","quote","subject","prevIsFixed","onSubmit","preventDefault","placeholder","onReOrderIngs","result","destIdx","destination","index","sourceIdx","source","reOrderList","handleRecipeAmounts","instructions","cols","rows","query","getEmptyRecipe","firstIng","getEmptyIngredient","createdAt","Date","now","getById","remove","update","save","getRecipeTxt","capitalizeSentence","relativeIng","relativeAmount","getAmountToScale","capitalize","units","BASE_URL","userId","filterBy","httpService","recipeId","_id","makeId","setDialogOpen","successCb","failCb"],"sourceRoot":""}