{"version":3,"file":"static/js/688.b7159f43.chunk.js","mappings":"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","sources":["hooks/useEffectUpdate.js","cmps/InputSwitch.jsx","services/cloudinary-service.js","cmps/RecipeImg.jsx","cmps/ShareButton.jsx","cmps/ingPreview.jsx","cmps/IngList.jsx","pages/RecipeEditor.jsx","services/storageService.js","services/recipeService.js","store/actions/dialogMsgActions.js"],"sourcesContent":["import { useEffect, useRef } from \"react\"\n\nexport const useEffectUpdate = (cb, dependencies) => {\n    const isFirstTime = useRef(true)\n\n    useEffect(() => {\n        if (isFirstTime.current) {\n            isFirstTime.current = false\n            return\n        }\n        cb()\n    }, dependencies)\n}","\nexport function InputSwitch({ value, onChange }) {\n    return (\n        <div className='input-switch'>\n            <input checked={value} onChange={onChange} type=\"checkbox\" name=\"switch\" id=\"cb2\" className=\"tgl tgl-light\" />\n            <label  htmlFor=\"cb2\" className=\"tgl-btn\"></label>\n            <h4>Fixed Mode?</h4>\n        </div>\n    )\n}\n\n\n\n// h4 iOS\n// input#cb2.tgl.tgl-ios(type = \"checkbox\")\n// label.tgl-btn(for = \"cb2\")\n\n","export async function uploadImg(ev) {\n    const CLOUD_NAME = 'recipe-gen'\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\n    const formData = new FormData();\n    formData.append('file', ev.target.files[0])\n    formData.append('upload_preset', 'recipe-gen');\n\n    return fetch(UPLOAD_URL, {\n        method: 'POST',\n        body: formData\n    })\n        .then(res => res.json())\n        .then(res => {\n            return res\n        })\n        .catch(err => console.error(err))\n}\n","import { useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { uploadImg } from '../services/cloudinary-service'\nimport { setDialogOpen } from '../store/actions/dialogMsgActions'\nimport { setLoading } from '../store/actions/loaderActions'\nimport { faCloudUploadAlt, faImage, faTrash } from '@fortawesome/free-solid-svg-icons'\nexport function RecipeImg({ imgUrl, onChangeImg, isEdited }) {\n    const dispatch = useDispatch()\n    const [isExpand, setIsExpand] = useState();\n    const inputRef = useRef()\n\n    const onUploadImg = async (ev) => {\n\n        const _uploadImg = async () => {\n            if (!ev.target.files[0]) return\n            try {\n                dispatch(setLoading(true))\n                const res = await uploadImg(ev)\n\n                onChangeImg(res.url)\n            } catch (err) {\n                console.log(err);\n            } finally {\n\n            }\n        }\n\n        _uploadImg(ev)\n        // if (isEdited) {\n        //     dispatch(setDialogOpen({ txt: 'Are you sure you want to proceed?', title: 'This will save any unsaved changes', successCb: () => _uploadImg(ev) }))\n\n        // } else {\n        //     _uploadImg(ev)\n        // }\n\n\n    }\n\n\n\n    const onTriggerImgUpload = (ev) => {\n        ev.stopPropagation()\n        inputRef.current.click()\n    }\n\n\n    const onRemoveImg = (ev) => {\n        ev.stopPropagation()\n        onChangeImg(null, true)\n        setIsExpand(false)\n    }\n\n\n    const expandClass = isExpand ? 'expand' : ''\n    const imgClass = imgUrl ? 'img-class' : ''\n    // const imgSrc = require('../assets/imgs/cloud-upload.jpeg')\n    return (\n        <section className='recipe-img-container'>\n\n            <section className={`recipe-img ${expandClass} ${imgClass}`}>\n                {imgUrl ?\n                    <section onClick={() => setIsExpand(prevExpand => !prevExpand)} className=\"img-container\" style={{ backgroundImage: `url(${imgUrl})` }} >\n                        <section className={`img-actions ${expandClass}`}>\n                            <button onClick={onTriggerImgUpload}><FontAwesomeIcon icon={faImage} /> <span>Change</span></button>\n                            <button onClick={onRemoveImg}><FontAwesomeIcon icon={faTrash} /> <span>Remove</span></button>\n                        </section>\n                    </section> :\n\n                    <section className=\"img-upload\">\n                        <label htmlFor=\"imgUploader\">\n                            {/* <img className='img-placeholder' src={imgSrc} alt=\"\" /> */}\n                            <FontAwesomeIcon className='upload-icon' icon={faCloudUploadAlt} />\n                        </label>\n                    </section>}\n                <input ref={inputRef} type=\"file\" id=\"imgUploader\" onChange={onUploadImg} hidden />\n            </section>\n        </section>\n    )\n}\n","import {\n    EmailShareButton,\n    FacebookShareButton,\n    RedditShareButton,\n    TelegramShareButton,\n    TwitterShareButton,\n    WhatsappShareButton,\n    WhatsappIcon,\n    FacebookIcon,\n    TelegramIcon,\n    EmailIcon,\n} from \"react-share\";\n\n\nconst DynamicShareBtn = (props) => {\n    switch (props.type) {\n        case 'whatsapp':\n            return <WhatsappShareButton {...props}><WhatsappIcon /></WhatsappShareButton>;\n        case 'facebook':\n            return <FacebookShareButton {...props}><FacebookIcon /></FacebookShareButton>;\n        case 'telegram':\n            return <TelegramShareButton {...props}><TelegramIcon/></TelegramShareButton>;\n        case 'email':\n            return <EmailShareButton {...props}><EmailIcon/></EmailShareButton>;\n        default:\n            return <></>;\n    }\n}\n\nexport function ShareButton(props) {\n    return (\n        <section className='share-btn'>\n            {/* <WhatsappShareButton url=\" \" title=\"My Recipe\"  ><WhatsappIcon /></WhatsappShareButton> */}\n            <DynamicShareBtn {...props} />\n        </section>\n    );\n}\n","import { forwardRef, useEffect, useMemo, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nimport { getAmountToScale, selectText, sleep } from \"../services/utilService\";\nimport { showErrorMsg } from \"../services/eventBusService\";\n\n\nexport function IngPreview({\n    ingredient,\n    ingToScale,\n    isFixedRatio,\n    onChangeRecipeData,\n    ingredientsLength,\n    handleIngChange,\n    removeIngredient,\n    providedRef,\n    dragHandleProp,\n    dragProp,\n    numOfDishes,\n    handleRecipeAmounts,\n    amountToScaleFixed\n}) {\n\n    const [className, setClassName] = useState('');\n\n    const moreRef = (el) => {\n        console.log('moreREf el:', el);\n\n    }\n\n\n    const onRemoveIngredient = async () => {\n        if (isFixedRatio) return\n        if (ingredientsLength === 1) {\n            showErrorMsg({ txt: 'Sorry, for now you need to have at least 1 ingredient' })\n            return\n        }\n\n        setClassName('equal')\n        await sleep(350)\n        removeIngredient(ingredient.id)\n    }\n\n    // const mergeRefs = (...refs) => {\n    //     const filteredRefs = refs.filter(Boolean);\n    //     if (!filteredRefs.length) return null;\n    //     if (filteredRefs.length === 0) return filteredRefs[0];\n    //     return inst => {\n    //         for (const ref of filteredRefs) {\n    //             if (typeof ref === 'function') {\n    //                 ref(inst);\n    //             } else if (ref) {\n    //                 ref.current = inst;\n    //             }\n    //         }\n    //     };\n    // };\n\n\n    const onHandleIngChange = (type) => {\n\n        if (!isFixedRatio) return (ev) => handleIngChange(ev, ingredient)\n        if (type === 'amount') {\n            return (ev) => handleRecipeAmounts(ev, ingredient)\n        }\n\n        return () => { }\n    }\n\n    const onChangeRecipeDataWrap = () => {\n        if (ingredient.units === 'units') {\n            showErrorMsg({ txt: \"Can't set 'Units' as a main relative quantity\" })\n            return\n        }\n        onChangeRecipeData('ingToScaleId', ingredient.id)\n    }\n\n\n    const handleKeyPress = (ev) => {\n\n        // if (ev.which === 13 || ev.charCode === 13 || ev.code==='Enter' || ev.nativeEvent.keyCode===13) {\n        if (ev.nativeEvent?.keyCode === 13 || ev.keyCode === 13 || ev.which === 13 || ev.charCode === 13 || ev.code === 'Enter') {\n            // if (ev.keyCode === 13) {\n            ev.target.blur()\n            window.getSelection().empty()\n            ev.stopPropagation()\n        }\n\n    }\n\n\n\n    const dishesAmount = useMemo(() => {\n        numOfDishes ||= 1\n        if (!isFixedRatio) return (ingredient.amount * numOfDishes) % 1 === 0 ? (ingredient.amount * numOfDishes) : (ingredient.amount * numOfDishes).toFixed(2)\n        const res = amountToScaleFixed / ingToScale.amount * ingredient.amount\n        return res % 1 === 0 ? res : res.toFixed(2)\n    }, [numOfDishes, amountToScaleFixed])\n\n\n    const ingToScaleClass = ingredient.id === ingToScale?.id ? 'chosen' : ''\n    /*TEST START*/\n    let amountToScale = (ingToScale) ? getAmountToScale(ingredient, ingToScale) : ''\n\n    /*TEST END*/\n\n    /*ORIGINAL START*/\n    // const amountToScale = (ingToScale && ingredient.units !== 'units') ? getAmountToScale(ingredient, ingToScale) : '-'\n    /*ORIGINAL END*/\n    var unitsLength = ingredient.units.length + 3\n\n    const isAmountEditable = !isFixedRatio || ingredient.id === ingToScale.id\n    const notAllowedClass = isFixedRatio ? 'not-allowed' : ''\n\n    return (\n\n\n        <article ref={providedRef} {...dragProp} {...dragHandleProp} className={`ing-preview ${className}`}>\n            <span tabIndex=\"-1\" className={`remove-icon ${notAllowedClass}`} ><FontAwesomeIcon onClick={onRemoveIngredient} icon={faTrash} /></span>\n\n\n            <section className=\"editable ing-name\" >\n                <span tabIndex=\"0\" className={notAllowedClass} onKeyPress={handleKeyPress} onFocus={selectText} title={ingredient.name} data-name=\"name\" onBlur={onHandleIngChange()} contentEditable={!isFixedRatio} suppressContentEditableWarning={true}>{ingredient.name}</span>\n            </section>\n            <section className=\"amount-unit\">\n                <span tabIndex=\"0\" onKeyPress={handleKeyPress} onFocus={selectText} inputMode=\"numeric\" data-name=\"amount\" onBlur={onHandleIngChange('amount')} className={`editable ${!isAmountEditable && 'not-allowed'}`} contentEditable={isAmountEditable} suppressContentEditableWarning={true}>{dishesAmount}</span>\n                <select disabled={isFixedRatio} className={notAllowedClass} tabIndex=\"0\" style={{ width: `${unitsLength}ch` }} onChange={onHandleIngChange()} value={ingredient.units} name=\"units\" id=\"units\">\n                {/* <select disabled={isFixedRatio} className={notAllowedClass} tabIndex=\"0\"  onChange={onHandleIngChange()} value={ingredient.units} name=\"units\" id=\"units\"> */}\n                    <option value=\"g\">g</option>\n                    <option value=\"Kg\">Kg</option>\n                    <option value=\"mL\">mL</option>\n                    <option value=\"L\">L</option>\n                    <option value=\"oz\">oz</option>\n                    <option value=\"cup\">Cup</option>\n                    <option value=\"tableSpoon\">Table spoon</option>\n                    <option value=\"teaSpoon\">Tea spoon</option>\n                    <option value=\"units\">Units</option>\n                </select>\n            </section>\n            <p title={amountToScale} onClick={onChangeRecipeDataWrap} className={`${ingToScaleClass} ${notAllowedClass}`}>{amountToScale || '-'}</p>\n        </article>\n    );\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useMemo, useState } from \"react\";\n\nimport { getIdxEquality } from \"../services/utilService\";\nimport { IngPreview } from \"./ingPreview\";\nimport { useRef } from 'react';\nconst grid = 8;\n\nexport function IngList({\n    ingredients,\n    ingToScale,\n    onChangeRecipeData,\n    handleIngChange,\n    handleEditable,\n    addIngredient,\n    removeIngredient,\n    ingToRemoveIdx,\n    onReOrderIngs,\n    numOfDishes,\n    isFixedRatio,\n    handleRecipeAmounts,\n    amountToScaleFixed\n}) {\n\n\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        // some basic styles to make the items look a bit nicer\n\n        userSelect: \"none\",\n        padding: grid * 2,\n        margin: `0 0 ${grid}px 0`,\n\n        // change background colour if dragging\n        background: isDragging ? \"lightgreen\" : \"'grey'\",\n\n        ...draggableStyle\n    });\n\n    const [isDrag, setIsDrag] = useState(false);\n\n\n\n    const getListStyle = isDraggingOver => ({\n        // background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n        // padding: grid,\n        // width: 250\n    });\n\n    const onDragStart = () => {\n        setIsDrag(true)\n\n    }\n    const onDragEnd = (res) => {\n        setIsDrag(false)\n        onReOrderIngs(res)\n    }\n\n    // const onDragEnd = (result) => {\n    //     onReOrderIngs(result)\n    // }\n\n\n\n    return (\n        <>\n\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\n                <Droppable droppableId=\"droppable\">\n                    {(provided, snapshot) => (\n                        <div\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                            style={getListStyle(snapshot.isDraggingOver)}\n                        >\n\n                            <section className='ing-list'>\n                                {ingredients.map((ingredient, idx) =>\n                                    // <>\n                                    <Draggable key={ingredient.id} draggableId={ingredient.id} index={idx}>\n                                        {(provided) => {\n                                            return (\n                                                <IngPreview\n                                                    providedRef={provided.innerRef}\n                                                    dragProp={provided.draggableProps}\n                                                    dragHandleProp={provided.dragHandleProps}\n                                                    removeIngredient={removeIngredient}\n                                                    handleEditable={handleEditable}\n                                                    handleIngChange={handleIngChange}\n                                                    key={ingredient.id}\n                                                    ingredient={ingredient}\n                                                    ingToScale={ingToScale}\n                                                    isFixedRatio={isFixedRatio}\n                                                    onChangeRecipeData={onChangeRecipeData}\n                                                    numOfDishes={numOfDishes}\n                                                    isRemovedClass={getIdxEquality(idx, ingToRemoveIdx)}\n                                                    ingredientsLength={ingredients.length}\n                                                    handleRecipeAmounts={handleRecipeAmounts}\n                                                    amountToScaleFixed={amountToScaleFixed}\n                                                />\n                                            )\n                                        }}\n                                    </Draggable>\n                                )}\n                                {(provided.placeholder)}\n                                {<button className=\"add-btn\" onClick={addIngredient} ><FontAwesomeIcon icon={faPlus} /></button>}\n                                {/* {(!snapshot.isDraggingOver||true) && <button style={{top: `${snapshot.isDraggingOver?}`}} onClick={addIngredient} className=\"add-btn\"><FontAwesomeIcon icon={faPlus} /></button>} */}\n\n                            </section>\n                        </div>\n\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </>\n    );\n}\n","import { lazy, Suspense, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\n\n\nimport { InputSwitch } from \"../cmps/InputSwitch\";\nimport { Loader } from \"../cmps/Loader\";\nimport { RecipeImg } from \"../cmps/RecipeImg\";\nimport { ShareButton } from \"../cmps/ShareButton\";\nimport { useEffectUpdate } from \"../hooks/useEffectUpdate\";\nimport { useForm } from \"../hooks/useFormRegister\";\nimport { showErrorMsg, showSuccessMsg } from \"../services/eventBusService\";\nimport { recipeService } from \"../services/recipeService\";\nimport { userService } from \"../services/userService\";\nimport { copyToClipboard, reOrderList, selectText, sleep } from \"../services/utilService\";\nimport { setLoading } from \"../store/actions/loaderActions\";\nimport { IngList } from \"../cmps/IngList\";\n// const IngList = lazy(() => import('../cmps/IngList'))\n\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\nexport default function RecipeEditor() {\n    const [recipe, setRecipe] = useState();\n    const [ingToRemoveIdx, setIngToRemoveIdx] = useState(null);\n    const [numOfDishes, setNumOfDishes] = useState('');\n    const [isEdited, setIsEdited] = useState(false);\n    const [isMounted, setIsMounted] = useState(false);\n    const [errMsg, setErrMsg] = useState('');\n\n    const ingToScaleRef = useRef(null)\n    const [isFixedRatio, setIsFixedRatio] = useState(false)\n    const [amountToScaleFixed, setAmountToScaleFixed] = useState()\n    // const [fixedRatioIngredients, setFixedRatioIngredients] = useState(second)\n\n    const dispatch = useDispatch()\n\n\n    const params = useParams()\n\n\n\n    useEffect(() => {\n        loadRecipe()\n    }, [params.id]);\n\n    // TODO continue for fixed scale\n    useEffect(() => {\n        if (!recipe) return\n        const ingToScale = getIngredientToScale(recipe)\n        setAmountToScaleFixed(ingToScale.amount)\n    }, [recipe?.ingToScaleId])\n\n    const loadRecipe = async () => {\n        try {\n            const recipe = params.id ? await recipeService.getById(params.id) : recipeService.getEmptyRecipe()\n            setRecipe(recipe)\n\n        } catch (err) {\n            console.log('failing');\n            setErrMsg(\"Sorry,  can't find this recipe at the moment\")\n        } finally {\n\n        }\n    }\n\n\n    useEffectUpdate(() => {\n        if (!isFixedRatio) {\n            const ingToScale = getIngredientToScale(recipe)\n            setAmountToScaleFixed(ingToScale.amount)\n        }\n    }, [isFixedRatio])\n\n    const saveRecipe = async (data, type) => {\n        const { recipe } = data\n        const oldRecipe = cloneDeep(recipe)\n        if (isFixedRatio) return\n        try {\n            setRecipe(recipe)\n\n            await recipeService.save(data, type)\n            return 'res'\n            // * if field is null thats means were removing an ingredient\n            // setIngToRemoveIdx(null)\n\n        } catch (err) {\n            console.log('cant save recipe: ', err);\n            setRecipe(oldRecipe)\n            throw err\n        } finally {\n            dispatch(setLoading(false))\n\n        }\n    }\n\n\n\n\n\n\n    const getIngredientToScale = useCallback((recipe) => {\n        const ingToScale = recipe.ingredients.find(ing => ing.id === recipe.ingToScaleId)\n        return ingToScale\n    }, [recipe]);\n\n    const onChangeRecipeData = async (field, value) => {\n\n        const recipeToSave = { ...recipe, [field]: value }\n        // if (!isEdited) setIsEdited(true)\n        if (field === 'ingToScaleId' || field === 'imgUrl') {\n            saveRecipe({ recipe: recipeToSave, field, value }, 'updateRecipe')\n        } else {\n            triggerSaveBtn(recipeToSave)\n        }\n\n    }\n\n\n    const handleRecipeAmounts = ({ target }, ingredient) => {\n        let amount = +target.innerText\n        if (!amount) amount = ingToScale.amount\n        setAmountToScaleFixed(amount)\n    }\n\n    const handleIngChange = async (ev, ingredient) => {\n        const { target } = ev\n        let field, value\n        field = target.name\n        value = target.value\n        if (target.nodeName !== 'SELECT' && target.nodeName !== 'INPUT') {\n            field = target.dataset.name\n            value = target.innerText\n\n            if (field === 'amount') {\n                value = +value\n                if (!value) {\n                    value = ingredient.amount\n                    target.innerText = value\n                    return\n                }\n            }\n        }\n\n        if (value === ingredient[field]) return\n\n        const ingToSave = { ...ingredient, [field]: value }\n        const recipeToSave = {\n            ...recipe,\n            ingredients: recipe.ingredients.map(ing => ing.id === ingredient.id ? ingToSave : ing)\n        }\n\n\n        if (field === 'units' && value === 'units' && recipeToSave.ingToScaleId === ingToSave.id) {\n            return showErrorMsg({ txt: \"Can't change main relative quantity to 'Units'\" })\n        }\n\n        triggerSaveBtn(recipeToSave)\n\n    }\n\n\n    const onSaveRecipe = async () => {\n        try {\n            setIsEdited(false)\n            await saveRecipe({ recipe }, 'general')\n            showSuccessMsg({ txt: 'Recipe saved', time: 2000 })\n        } catch (err) {\n            showErrorMsg({ txt: 'Saving recipe failed', time: 2000 })\n        }\n    }\n\n\n\n    const triggerSaveBtn = (recipeToSave) => {\n        setRecipe(recipeToSave)\n        if (!isEdited) {\n            setIsEdited(true)\n            setIsMounted(true)\n        }\n    }\n\n    const handleNumOfDishesChange = ({ target }) => {\n        let value = +target.value\n\n        if (!value || value < 0) value = ''\n        setNumOfDishes(value)\n\n    }\n\n\n\n\n    const addIngredient = async () => {\n        const ingToAdd = recipeService.getEmptyIngredient()\n        ingToAdd.isNew = true\n        const recipeToSave = {\n            ...recipe,\n            ingredients: [...recipe.ingredients, ingToAdd]\n        }\n        triggerSaveBtn(recipeToSave)\n    }\n\n    /**\n     * remove ingredient\n     * \n     * @param {string} ingId \n     */\n    const removeIngredient = async (ingId) => {\n\n\n        const recipeToSave = {\n            ...recipe,\n            ingredients: recipe.ingredients.filter(ing => ing.id !== ingId)\n        }\n        if (recipe.ingToScaleId === ingId) {\n            recipe.ingToScaleId = ''\n        }\n\n        triggerSaveBtn(recipeToSave)\n    }\n\n\n    const onChangeRecipeImg = async (imgUrl, isRemove) => {\n        if (!imgUrl && !isRemove) return\n        await onChangeRecipeData('imgUrl', imgUrl)\n        dispatch(setLoading(false))\n    }\n\n\n\n    const onReOrderIngs = (result) => {\n        const { index: destIdx } = result.destination\n        const { index: sourceIdx } = result.source\n        let ingredients = [...recipe.ingredients]\n        ingredients = reOrderList(ingredients, destIdx, sourceIdx)\n        const recipeToSave = {\n            ...recipe,\n            ingredients: ingredients\n        }\n        if (!isEdited) {\n            saveRecipe({ recipe: recipeToSave }, 'general')\n\n        } else {\n            setRecipe(recipeToSave)\n        }\n    }\n\n    const onCopyToClipBoard = () => {\n        const recipeTxt = recipeService.getRecipeTxt(recipe)\n        copyToClipboard(recipeTxt)\n        showSuccessMsg({ txt: 'Copied to clipboard' })\n    }\n\n\n\n    if (!recipe) return <div>{errMsg || <Loader _isLoading={true} />}</div>\n    const ingToScale = getIngredientToScale(recipe)\n\n\n    const floatBtnClass = isEdited ? 'animate-in' : 'animate-out'\n    const recipeTxt = recipeService.getRecipeTxt(recipe)\n    if (!amountToScaleFixed) return <Loader _isLoading={true} />\n\n    return (\n        <div className='recipe-editor'>\n\n            <section className=\"title-container\">\n                <h2 onFocus={selectText} onBlur={({ target }) => onChangeRecipeData('name', target.innerText)} contentEditable suppressContentEditableWarning={true} >{recipe.name}</h2>\n                <button className=\"btn copy\" onClick={onCopyToClipBoard}>Copy To Clipboard</button>\n            </section>\n            <RecipeImg imgUrl={recipe.imgUrl} isEdited={isEdited} onChangeImg={onChangeRecipeImg} />\n            <section className=\"share-btns\">\n                <ShareButton url=\" \" type=\"whatsapp\" title={recipeTxt} />\n                <ShareButton url=\"facebook.com\" type=\"facebook\" quote={recipeTxt} />\n                <ShareButton url=\"telegram.com\" type=\"telegram\" title={recipeTxt} />\n                <ShareButton url=\"\" type=\"email\" subject={recipe.name} body={recipeTxt} />\n            </section>\n            <section className=\"title-edit\">\n                {/* <section className=\"inner-edit\"> */}\n                {/* <strong className=\"ingredients\">Ingredients</strong> */}\n                <InputSwitch value={isFixedRatio} onChange={() => setIsFixedRatio(prevIsFixed => !prevIsFixed)} />\n                {/* </section> */}\n                <form onSubmit={ev => ev.preventDefault()} className=\"nice-form\">\n                    <div className=\"form__group field dishes-form\">\n                        <input value={numOfDishes} onChange={handleNumOfDishesChange} type=\"number\" id=\"numOfDishes\" name=\"numOfDishes\" className=\"form__field\" placeholder=\"Search by recipe or ingredient\" />\n                        <label htmlFor=\"numOfDishes\" className=\"form__label\">Number Of Dishes</label>\n                    </div>\n                </form>\n            </section>\n            <IngList\n                removeIngredient={removeIngredient}\n                addIngredient={addIngredient}\n                handleIngChange={handleIngChange}\n                ingredients={recipe.ingredients}\n                ingToScale={ingToScale}\n                onChangeRecipeData={onChangeRecipeData}\n                ingToRemoveIdx={ingToRemoveIdx}\n                onReOrderIngs={onReOrderIngs}\n                numOfDishes={numOfDishes}\n                isFixedRatio={isFixedRatio}\n                handleRecipeAmounts={handleRecipeAmounts}\n                amountToScaleFixed={amountToScaleFixed}\n            />\n\n\n            {/* <section className=\"gap\"></section> */}\n            <section className=\"instructions\">\n\n                <strong className=\"instructions-title\">Instructions</strong>\n                <textarea onClick={(ev) => ev.stopPropagation()} className=\"instructions-area\" onChange={(({ target }) => onChangeRecipeData('instructions', target.value))} value={recipe.instructions} name=\"instructions\" id=\"\" cols=\"30\" rows=\"30\"></textarea>\n            </section>\n\n\n            {/* {isMounted && <button onClick={()=>setIsEdited(false)} className={`edit-btn cancel-changes ${floatBtnClass}`}>Cancel</button>} */}\n            {isMounted && <button onClick={onSaveRecipe} className={`edit-btn save-changes ${floatBtnClass}`}>Save Changes</button>}\n\n        </div>\n    );\n}\n","\r\nfunction store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\nexport const storageService = {\r\n    store,\r\n    load\r\n}\r\n","import { capitalize } from 'lodash'\r\nimport { httpService } from './httpService.js'\r\nimport { storageService } from './storageService.js'\r\nimport { capitalizeSentence, copyToClipboard, getAmountToScale, makeId } from './utilService.js'\r\n\r\nexport const recipeService = {\r\n    query,\r\n    getEmptyRecipe,\r\n    getEmptyIngredient,\r\n    getById,\r\n    remove,\r\n    update,\r\n    save,\r\n    getRecipeTxt\r\n}\r\n\r\nconst STORAGE_KEY = 'recipes'\r\nconst BASE_URL = 'recipe'\r\n\r\n\r\nasync function query(userId, filterBy) {\r\n    try {\r\n        return httpService.get(BASE_URL, { userId, filterBy })\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n\r\nasync function getById(id) {\r\n    try {\r\n        const res = await httpService.get(BASE_URL + '/' + id)\r\n        // if (res)\r\n        return res\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync function remove(recipeId) {\r\n    try {\r\n        return httpService.delete(`${BASE_URL}/${recipeId}`)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n/*TEST START*/\r\nasync function save(data, type) {\r\n    try {\r\n        return data?.recipe._id ? httpService.put(BASE_URL, {data, type}) : httpService.post(BASE_URL, data.recipe)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n/*TEST END*/\r\n\r\n\r\n\r\n/*ORIGINAL START*/\r\n// async function save(recipe, field, value, ingId) {\r\n//     try {\r\n//         return recipe._id ? httpService.put(BASE_URL, { recipe, field, value, ingId }) : httpService.post(BASE_URL, recipe)\r\n//     } catch (err) {\r\n//         return\r\n//     }\r\n// }\r\n/*ORIGINAL END*/\r\n\r\n\r\n\r\n\r\nasync function update(recipe) {\r\n    try {\r\n        return httpService.put(BASE_URL, recipe)\r\n    } catch (err) {\r\n        return\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction getEmptyRecipe() {\r\n    const firstIng = getEmptyIngredient()\r\n    return {\r\n        name: 'New Recipe',\r\n        createdAt: Date.now(),\r\n        ingToScaleId: firstIng.id,\r\n        ingredients: [firstIng],\r\n        imgUrl:'',\r\n        instructions: ''\r\n    }\r\n}\r\n\r\nfunction getEmptyIngredient() {\r\n    return {\r\n        id: makeId(),\r\n        name: 'ingredient',\r\n        amount: 1,\r\n        units: 'g'\r\n    }\r\n}\r\n\r\n\r\nfunction getRecipeTxt(recipe) {\r\n    let recipeTxt = ''\r\n    recipeTxt += capitalizeSentence(recipe.name) + '\\n\\n\\n'\r\n    const relativeIng = recipe.ingredients.find(ing => ing.id === recipe.ingToScaleId)\r\n    recipeTxt += '--Ingredients--\\n'\r\n    for (const ingredient of recipe.ingredients) {\r\n        \r\n        const relativeAmount = relativeIng && getAmountToScale(ingredient, relativeIng)\r\n        recipeTxt += capitalize(ingredient.name) + '\\t\\t '\r\n        recipeTxt += ingredient.amount + ' ' + ingredient.units + '\\t\\t '\r\n        recipeTxt += relativeAmount\r\n        recipeTxt += '\\n\\n'\r\n    }\r\n    recipeTxt += '\\n\\n'\r\n    recipeTxt += '--Instructions--\\n'\r\n    recipeTxt += recipe.instructions\r\n\r\n    \r\n    return recipeTxt\r\n\r\n}\r\n\r\n\r\n","\nexport function setDialogOpen({ txt, title, successCb = () => { }, failCb = () => { } }) {\n  return async (dispatch) => {\n    try {\n      return dispatch({ type: 'SET_DIALOG_OPEN', txt, title, successCb, failCb })\n    } catch (err) {\n      console.log('err:', err);\n      throw err\n    }\n  }\n}\n\nexport function setDialogClose(txt, title) {\n  return async (dispatch) => {\n    try {\n      return dispatch({ type: 'SET_DIALOG_CLOSE' })\n    } catch (err) {\n      console.log('err:', err);\n      throw err\n    }\n  }\n}\n\n"],"names":["useEffectUpdate","cb","dependencies","isFirstTime","useRef","useEffect","current","InputSwitch","value","onChange","className","checked","type","name","id","htmlFor","uploadImg","ev","UPLOAD_URL","formData","FormData","append","target","files","fetch","method","body","then","res","json","catch","err","console","error","RecipeImg","imgUrl","onChangeImg","dispatch","isEdited","useDispatch","useState","isExpand","setIsExpand","inputRef","onUploadImg","_uploadImg","setLoading","url","log","expandClass","imgClass","onClick","prevExpand","style","backgroundImage","stopPropagation","click","icon","faImage","faTrash","faCloudUploadAlt","ref","hidden","DynamicShareBtn","props","WhatsappShareButton","WhatsappIcon","FacebookShareButton","FacebookIcon","TelegramShareButton","TelegramIcon","EmailShareButton","EmailIcon","ShareButton","IngPreview","ingredient","ingToScale","isFixedRatio","onChangeRecipeData","ingredientsLength","handleIngChange","removeIngredient","providedRef","dragHandleProp","dragProp","numOfDishes","handleRecipeAmounts","amountToScaleFixed","setClassName","onRemoveIngredient","showErrorMsg","txt","sleep","onHandleIngChange","handleKeyPress","nativeEvent","keyCode","which","charCode","code","blur","window","getSelection","empty","dishesAmount","useMemo","amount","toFixed","ingToScaleClass","amountToScale","getAmountToScale","unitsLength","units","length","isAmountEditable","notAllowedClass","tabIndex","onKeyPress","onFocus","selectText","title","onBlur","contentEditable","suppressContentEditableWarning","inputMode","disabled","width","IngList","ingredients","handleEditable","addIngredient","ingToRemoveIdx","onReOrderIngs","setIsDrag","onDragStart","onDragEnd","droppableId","provided","snapshot","droppableProps","innerRef","isDraggingOver","map","idx","draggableId","index","draggableProps","dragHandleProps","isRemovedClass","getIdxEquality","placeholder","faPlus","cloneDeep","require","RecipeEditor","recipe","setRecipe","setNumOfDishes","setIsEdited","isMounted","setIsMounted","errMsg","setErrMsg","setIsFixedRatio","setAmountToScaleFixed","params","useParams","loadRecipe","getIngredientToScale","ingToScaleId","recipeService","saveRecipe","data","oldRecipe","useCallback","find","ing","field","recipeToSave","triggerSaveBtn","nodeName","dataset","innerText","ingToSave","onSaveRecipe","showSuccessMsg","time","ingToAdd","isNew","ingId","filter","onChangeRecipeImg","isRemove","Loader","_isLoading","floatBtnClass","recipeTxt","copyToClipboard","quote","subject","prevIsFixed","onSubmit","preventDefault","result","destIdx","destination","sourceIdx","source","reOrderList","instructions","cols","rows","query","getEmptyRecipe","firstIng","getEmptyIngredient","createdAt","Date","now","getById","remove","update","save","getRecipeTxt","capitalizeSentence","relativeIng","relativeAmount","capitalize","BASE_URL","userId","filterBy","httpService","recipeId","_id","makeId","setDialogOpen","successCb","failCb"],"sourceRoot":""}